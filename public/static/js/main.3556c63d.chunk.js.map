{"version":3,"sources":["utils/constants.ts","services/user.service.ts","utils/functions.ts","components/ui/Alert.tsx","components/ui/Loading.tsx","components/ui/Card.tsx","components/ui/Badge.tsx","components/UsersList.tsx","contexts/user.context.tsx","pages/Home.tsx","services/dataset.service.ts","services/dashboard.service.ts","components/form/Input.tsx","components/form/Select.tsx","pages/DatasetColumns.tsx","utils/legends.ts","utils/tooltip-vertical.ts","charts/VerticalBarChart.tsx","services/dashboard-recommendation.service.ts","charts/LineChart.tsx","charts/Heatmap.tsx","utils/tooltip-horizontal.ts","charts/HorizontalBarChart.tsx","utils/tooltip-group-horizontal.ts","charts/StackedHorizontalBarChart.tsx","charts/MultipleLineChart.tsx","charts/MapChart.tsx","charts/Mapbox.tsx","charts/GroupedHorizontalBarChart.tsx","pages/Dashboard.tsx","hooks/useButtonGroup.tsx","pages/UserAdd.tsx","components/DashboardList.tsx","components/DatasetsList.tsx","pages/UserView.tsx","components/UploadFileForm.tsx","components/Header.tsx","components/form/Checkbox.tsx","pages/Preferences.tsx","App.tsx","index.tsx"],"names":["API_URL","a","ky","get","json","getById","id","user","post","remove","delete","preferences","applyClass","condition","className","generateId","Math","random","toString","substr","scaleBandInvert","scale","domain","paddingOuter","eachBand","step","value","index","floor","max","min","length","capitalize","endsWith","slice","replaceAll","split","map","s","flat","charAt","toUpperCase","join","replace","createColorScale","disability","keys","d3","includes","elementId","svgId","Alert","title","message","role","icon","Loading","loading","spin","size","Card","children","Badge","UsersList","useState","users","setUsers","isLoading","setIsLoading","load","getAll","then","useEffect","onDeleteHandler","name","visLiteracy","formatRelative","Date","updatedDate","createdDate","to","type","onClick","UserContext","createContext","undefined","UserProvider","props","localStorage","getItem","setUser","setDisability","Provider","signIn","setItem","signOut","removeItem","Home","history","useHistory","useContext","uploadDataset","userId","file","formData","FormData","append","body","save","fields","update","put","Input","label","placeholder","disabled","formik","htmlFor","getFieldProps","Select","options","toLowerCase","option","isDisabled","DatasetColumns","action","setLoading","purpose","values","setValues","setName","loadingCount","setLoadingCount","useParams","response","columns","formFields","indexes","moreThanOneMeasure","filter","column","DatasetColumnRole","MEASURE","forEach","field","push","originalName","removed","aggregate","DatasetSchemaAggregateFunction","Sum","None","originalname","setTimeout","dashboardService","userDatasets","goalType","goalPurpose","backToHome","enableReinitialize","initialValues","onSubmit","f","i","datasetId","goal","colums","setFieldValue","item","createLegend","svg","marginLeft","colorScale","keysMapper","keysLength","selectAll","data","enter","attr","text","d","each","_","thisWidth","this","getComputedTextLength","groupLegendItem","formatter","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","format","createTooltipVertical","yScale","valueMax","marginTop","xScaleBand","xScaleTime","groupHover","on","event","x","invert","dIndex","findIndex","console","log","nextD","delta","useNext","abs","startX","bandwidth","groupHoverContent","titleWidth","node","textWidth","valueWidth","getBBox","width","VerticalBarChart","margin","getBoundingClientRect","groupData","groupAxis","xScale","paddingInner","range","xAxis","yAxis","call","LineChart","height","extent","lineGenerator","defined","isNaN","y","datum","Heatmap","xAcessor","dayOfWeeks","Array","from","e","addDays","startOfWeek","formatWeeek","weeks","Set","padding","getDay","parse","differenceInDays","tickValues","ceil","HorizontalBarChart","top","bottom","left","right","maxTextWidth","yScaleBand","yScaleTime","startY","positionX","positionY","moveX","moveY","createTooltipHorizontal","createTooltipGroupHorizontal","StackedHorizontalBarChart","Number","MIN_SAFE_INTEGER","sort","b","name2","localeCompare","reduce","prev","curr","find","p","total","start","end","reverse","colors","v","MultipleLineChart","valueMaxLeft","Object","k","axis","valueMaxRight","hasRightAxis","some","y2Scale","y2Axis","key","leftLineGenerator","rightLineGenerator","dd","MapChart","geofile","shape","projection","fitExtent","path","style","trim","properties","accessor","MapBox","mapContainer","useRef","current","latMin","MAX_VALUE","latMax","MIN_VALUE","lngMin","lngMax","features","latitude","longitude","geometry","coordinates","mapbox","Map","container","zoom","bounds","addSource","cluster","clusterMaxZoom","clusterRadius","addLayer","source","paint","layout","ref","GroupedHorizontalBarChart","groupedKeys","firstGroup","convert","accessToken","Dashboard","dashboard","setDashboard","chartData","setChartData","page","setPage","setD","getSpec","cData","pages","clampStrings","owner","charts","multipleLines","fieldX","specs","spec","userDimension","fieldY","userMeasure","keysTitle","encoding","fieldColor","color","Mean","trimValues","userSecondDimension","mark","geoFile","dashboardPage","chart","VegaLite","useButtonGroup","defaultValue","state","setState","UserAdd","VisLiteracy","colorBlind","ColorBlind","dyslexic","Dyslexic","useFormik","Boolean","handleSubmit","DashboardList","datasets","setDatasets","countColumns","dataset","count","DIMENSION","DatasetsList","UserView","userData","UploadFileForm","onChangeHandler","persist","target","files","onChange","withRouter","Checkbox","checked","types","chartTypes","typeX","typeY","Preferences","setVisLiteracy","setColorBlind","setDyslexic","stacked","multiline","rightAxis","binValues","savePreferences","chartType","library","add","fas","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3556c63d.chunk.js","sourcesContent":["export const API_URL = '';\n","import ky from 'ky';\n\nimport { UserDTO, UserInterface } from '@junoapp/common';\nimport { API_URL } from '../utils/constants';\n\nexport async function getAll(): Promise<UserInterface[]> {\n  return ky.get(`${API_URL}/api/user`).json();\n}\n\nexport async function getById(id: number): Promise<UserInterface> {\n  return ky.get(`${API_URL}/api/user/${id}`).json();\n}\n\nexport async function save(user: UserDTO): Promise<UserInterface> {\n  return ky\n    .post(`${API_URL}/api/user`, {\n      json: user,\n    })\n    .json();\n}\n\nexport async function remove(id: number): Promise<Response> {\n  return ky.delete(`${API_URL}/api/user/${id}`);\n}\n\nexport async function savePreferences(id: number, preferences: any): Promise<Response> {\n  return ky.post(`${API_URL}/api/user/preferences/${id}`, {\n    json: preferences,\n  });\n}\n","import * as d3 from 'd3';\n\nexport function applyClass(condition: boolean | string | undefined, className?: string) {\n  return className ? (condition ? className : '') : condition ? condition : '';\n}\n\nexport function generateId(): string {\n  return 'juno-' + Math.random().toString(36).substr(2, 9);\n}\n\nexport function generateId2(): string {\n  return 'j' + Math.random().toString(36).substr(2, 9);\n}\n\nexport function scaleBandInvert(scale: d3.ScaleBand<string>) {\n  var domain = scale.domain();\n  var paddingOuter = scale(domain[0]) || 0;\n  var eachBand = scale.step();\n\n  return function (value: number) {\n    var index = Math.floor((value - paddingOuter) / eachBand);\n    return domain[Math.max(0, Math.min(index, domain.length - 1))];\n  };\n}\n\nexport function capitalize(value: string) {\n  if (value.endsWith('.csv')) {\n    value = value.slice(0, -4);\n  }\n\n  value = value.replaceAll('_', ' ');\n\n  return value\n    .split(' ')\n    .map((s) => s.split(/(?=[A-Z])/))\n    .flat()\n    .map((s) => s.charAt(0).toUpperCase() + s.slice(1))\n    .join(' ')\n    .replace(/\\s+/g, ' ');\n}\n\nexport function createColorScale(\n  disability: string,\n  keys: string[]\n): d3.ScaleOrdinal<string, string> {\n  return d3.scaleOrdinal(\n    disability?.includes('colorBlind')\n      ? keys.length > 4\n        ? ['#3575B1']\n        : ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c']\n      : keys.length > 10\n      ? ['#3575B1']\n      : d3.schemeCategory10\n  );\n}\n\nexport function elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { applyClass } from '../../utils/functions';\n\nexport function Alert({\n  title,\n  message,\n  className,\n}: {\n  title: string;\n  message: string;\n  className?: string;\n}) {\n  return (\n    <div\n      className={`bg-blue-100 border-blue-500 rounded-b text-blue-900 px-4 py-3 shadow-md w-full h-fit ${applyClass(\n        className\n      )}`}\n      role=\"alert\"\n    >\n      <div className=\"flex\">\n        <div className=\"py-1 h-6 w-6 text-blue-500 mr-4\">\n          <FontAwesomeIcon icon=\"info-circle\" />\n        </div>\n        <div>\n          <p className=\"font-bold\">{title}</p>\n          <p className=\"text-sm\">{message}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function Loading({ loading }: { loading: boolean }): JSX.Element {\n  return loading ? (\n    <div className=\"absolute top-1/2 left-1/2 -mt-4 -ml-4 h-40\">\n      <FontAwesomeIcon icon=\"circle-notch\" spin size=\"2x\" className=\"text-orange-500\" />\n    </div>\n  ) : (\n    <></>\n  );\n}\n","import { applyClass } from '../../utils/functions';\n\nexport function Card({\n  title,\n  className,\n  children,\n}: {\n  title?: string;\n  className?: string;\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <div\n      className={`w-full h-full rounded overflow-hidden shadow bg-white ${applyClass(className)}`}\n    >\n      {title && (\n        <div className=\"px-6 pt-4\">\n          <div className=\"font-bold text-xl mb-2 break-words\">{title}</div>\n        </div>\n      )}\n      <div className=\"px-6 py-4\">{children}</div>\n    </div>\n  );\n}\n","export function Badge({ children }: { children: React.ReactNode }): JSX.Element {\n  return (\n    <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n      {children}\n    </span>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { formatRelative } from 'date-fns';\nimport { Link } from 'react-router-dom';\n\nimport { getAll, remove } from '../services/user.service';\nimport { UserInterface } from '@junoapp/common';\nimport { Alert } from './ui/Alert';\nimport { Loading } from './ui/Loading';\nimport { Card } from './ui/Card';\nimport { Badge } from './ui/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function UsersList(): JSX.Element {\n  const [users, setUsers] = useState<UserInterface[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const load = () => {\n    setIsLoading(true);\n\n    getAll().then((users) => {\n      setUsers(users);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const onDeleteHandler = async (id: number) => {\n    setIsLoading(true);\n    await remove(id);\n    load();\n  };\n\n  return (\n    <div className=\"relative flex flex-wrap -mx-4 min-h\">\n      <Loading loading={isLoading} />\n\n      {!isLoading && users.length === 0 && (\n        <Alert\n          title=\"No user added\"\n          message=\"Add some user to start a new dashboard.\"\n          className=\"mx-4\"\n        />\n      )}\n\n      {!isLoading &&\n        users.length > 0 &&\n        users.map((user: UserInterface) => (\n          <div key={user['id']} className=\"w-1/3 px-4 mb-4\">\n            <Card title={user.name}>\n              <div className=\"flex flex-col items-start\">\n                <Badge>VisLiteracy: {user.visLiteracy}</Badge>\n                {user.disability && <Badge>Disability: {user.disability}</Badge>}\n\n                <span className=\"text-gray-600 text-xs mb-2\">\n                  Updated {formatRelative(new Date(user.updatedDate), new Date())}\n                  <br />\n                  Created {formatRelative(new Date(user.createdDate), new Date())}\n                </span>\n              </div>\n              <div className=\"flex\">\n                <Link\n                  to={`user/view/${user.id}`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"eye\" />\n                  Login\n                </Link>\n                <button\n                  type=\"button\"\n                  className=\"button button-danger button-small\"\n                  onClick={() => onDeleteHandler(user.id)}\n                >\n                  <FontAwesomeIcon icon=\"trash\" />\n                  Delete\n                </button>\n              </div>\n            </Card>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { createContext, useState } from 'react';\n\nexport interface UserContextData {\n  user: string;\n  disability: string;\n  signIn(user: string, disability: string): void;\n  signOut(): void;\n}\n\nexport const UserContext = createContext<UserContextData | undefined>(undefined);\n\nexport function UserProvider(props: { children: JSX.Element }): JSX.Element {\n  const [user, setUser] = useState<string>(localStorage.getItem('user'));\n  const [disability, setDisability] = useState<string>(localStorage.getItem('disability'));\n\n  function signIn(user: string, disability: string) {\n    localStorage.setItem('user', user);\n    localStorage.setItem('disability', disability);\n\n    setUser(user);\n    setDisability(disability);\n  }\n\n  function signOut() {\n    localStorage.removeItem('user');\n    localStorage.removeItem('disability');\n    setUser(undefined);\n    setDisability(undefined);\n  }\n\n  return (\n    <UserContext.Provider value={{ user, disability, signIn, signOut }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n","import { Link, useHistory } from 'react-router-dom';\n\nimport { UsersList } from '../components/UsersList';\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/user.context';\n\nexport function Home(): JSX.Element {\n  const history = useHistory();\n  const { user } = useContext(UserContext);\n\n  if (user) {\n    history.replace(`/user/view/${user}`);\n  }\n\n  return (\n    <div>\n      <div className=\"flex\">\n        <Link to={`/user/add`} className=\"button button-primary\">\n          Add new user\n        </Link>\n      </div>\n\n      <div className=\"mt-5\">\n        <UsersList />\n      </div>\n    </div>\n  );\n}\n","import ky from 'ky';\n\nimport { DashboardUpdate, DatasetInterface } from '@junoapp/common';\nimport { API_URL } from '../utils/constants';\n\nexport async function getAll(): Promise<DatasetInterface[]> {\n  return ky.get(`${API_URL}/api/dataset`).json();\n}\n\nexport async function getById(id: number): Promise<DatasetInterface> {\n  return ky.get(`${API_URL}/api/dataset/${id}`).json();\n}\n\nexport async function getSpec(datasetId: number): Promise<any[]> {\n  return ky.get(`${API_URL}/api/dashboard/${datasetId}/spec`).json();\n}\n\nexport async function uploadDataset(userId: string, file: File): Promise<DatasetInterface> {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('user', userId);\n\n  return ky\n    .post(`${API_URL}/api/dataset/upload`, {\n      body: formData,\n    })\n    .json();\n}\n\nexport async function updateColumns(id: number, fields: DashboardUpdate): Promise<Response> {\n  return ky.post(`${API_URL}/api/dashboard/${id}`, {\n    json: fields,\n  });\n}\n\nexport async function remove(id: number): Promise<Response> {\n  return ky.delete(`${API_URL}/api/dataset/${id}`);\n}\n","import ky from 'ky';\n\nimport {\n  DashboardInsert,\n  DashboardInterface,\n  DashboardUpdate,\n  DatasetInterface,\n} from '@junoapp/common';\nimport { API_URL } from '../utils/constants';\n\nexport async function getAll(userId: number): Promise<DashboardInterface[]> {\n  return ky.get(`${API_URL}/api/dashboard?user=${userId}`).json();\n}\n\nexport async function getById(id: number): Promise<DashboardInterface> {\n  return ky.get(`${API_URL}/api/dashboard/${id}`).json();\n}\n\nexport async function getSpec(datasetId: number): Promise<any[]> {\n  return ky.get(`${API_URL}/api/dashboard/${datasetId}/spec`).json();\n}\n\nexport async function uploadDataset(userId: string, file: File): Promise<DatasetInterface> {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('user', userId);\n\n  return ky\n    .post(`${API_URL}/api/dashboard/upload`, {\n      body: formData,\n    })\n    .json();\n}\n\nexport async function save(fields: DashboardInsert): Promise<Response> {\n  return ky.post(`${API_URL}/api/dashboard`, {\n    json: fields,\n  });\n}\n\nexport async function update(fields: DashboardUpdate): Promise<Response> {\n  return ky.put(`${API_URL}/api/dashboard`, {\n    json: fields,\n  });\n}\n\nexport async function remove(id: number): Promise<Response> {\n  return ky.delete(`${API_URL}/api/dashboard/${id}`);\n}\n","import { FieldInputProps } from 'formik';\n\nexport function Input({\n  name,\n  label,\n  type,\n  placeholder,\n  disabled,\n  formik,\n}: {\n  name: string;\n  label: string;\n  type?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  formik: { getFieldProps: (name: string) => FieldInputProps<any> };\n}): JSX.Element {\n  return (\n    <div>\n      <label className=\"label\" htmlFor={name}>\n        {label}\n      </label>\n      <input\n        className=\"input\"\n        id={name}\n        type={type || 'text'}\n        placeholder={placeholder || ''}\n        disabled={disabled}\n        {...formik.getFieldProps(name)}\n      />\n    </div>\n  );\n}\n","import { FieldInputProps } from 'formik';\nimport { DropdownOption } from '../../models/dropdown-option';\n\nexport function Select({\n  name,\n  label,\n  options,\n  formik,\n  disabled,\n}: {\n  name: string;\n  label: string;\n  options: Array<DropdownOption>;\n  formik: { getFieldProps: (name: string) => FieldInputProps<any> };\n  disabled?: boolean;\n}): JSX.Element {\n  return (\n    <div>\n      <label className=\"label\" htmlFor={name}>\n        {label}\n      </label>\n      <div className=\"relative\">\n        <select className=\"select\" id={name} {...formik.getFieldProps(name)} disabled={disabled}>\n          <option value=\"\">Select a {label.toLowerCase()}</option>\n          {options.map((option) => (\n            <option key={option.value} value={option.value} disabled={option.isDisabled || false}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport { Formik, Form } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { getById } from '../services/dataset.service';\nimport * as dashboardService from '../services/dashboard.service';\nimport { Loading } from '../components/ui/Loading';\nimport { Card } from '../components/ui/Card';\nimport { Input } from '../components/form/Input';\nimport { Select } from '../components/form/Select';\nimport { UploadInfoField } from '../models/upload-info';\nimport { DropdownOption } from '../models/dropdown-option';\nimport { DashboardGoal, DashboardPurpose, DatasetColumnRole } from '@junoapp/common';\nimport { UserContext } from '../contexts/user.context';\nimport { DatasetSchemaAggregateFunction } from '@junoapp/common';\nimport { capitalize } from '../utils/functions';\n\nexport function DatasetColumns({ action }: { action: 'add' | 'edit' }): JSX.Element {\n  const [isLoading, setLoading] = useState(false);\n  const [values, setValues] = useState<{\n    name: string;\n    type: string;\n    purpose: string;\n    fields: Array<UploadInfoField>;\n  }>({ name: '', type: '', purpose: '', fields: [] });\n\n  const [name, setName] = useState<string | undefined>(undefined);\n  const [loadingCount, setLoadingCount] = useState(0);\n\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    setLoading(true);\n    if (action === 'add') {\n      getById(+id).then((response) => {\n        if (response.columns.length === 0) {\n          setTimeout(() => {\n            setLoadingCount(loadingCount + 1);\n          }, 1000);\n          return;\n        }\n\n        const formFields: UploadInfoField[] = [];\n        const indexes: DropdownOption[] = [];\n\n        const moreThanOneMeasure =\n          response.columns.filter((column) => column.role === DatasetColumnRole.MEASURE).length > 1;\n\n        response.columns.forEach((field, index) => {\n          formFields.push({\n            id: field.id,\n            originalName: field.name,\n            name: capitalize(field.name),\n            role: field.role,\n            index,\n            removed:\n              moreThanOneMeasure &&\n              field.role === DatasetColumnRole.MEASURE &&\n              field.name.toLowerCase() === 'count',\n            type: field.type,\n            aggregate:\n              field.role === DatasetColumnRole.MEASURE\n                ? DatasetSchemaAggregateFunction.Sum\n                : DatasetSchemaAggregateFunction.None,\n          });\n\n          indexes.push({\n            label: index.toString(),\n            value: index.toString(),\n            isDisabled: false,\n          });\n        });\n\n        setName(capitalize(response.originalname));\n        setLoading(false);\n        setValues({\n          name: capitalize(response.originalname),\n          type: '',\n          purpose: '',\n          fields: formFields,\n        });\n      });\n    } else {\n      dashboardService.getById(+id).then((response) => {\n        const formFields: UploadInfoField[] = [];\n        const indexes: DropdownOption[] = [];\n\n        response.userDatasets[0].columns.forEach((field, index) => {\n          formFields.push({\n            id: field.id,\n            originalName: field.column.name,\n            name: field.name,\n            role: field.role,\n            index,\n            removed: field.removed,\n            type: field.column.type,\n            aggregate: field.aggregate,\n          });\n\n          indexes.push({\n            label: index.toString(),\n            value: index.toString(),\n            isDisabled: false,\n          });\n        });\n\n        setName(response.name);\n        setLoading(false);\n        setValues({\n          name: response.name,\n          type: response.goalType,\n          purpose: response.goalPurpose,\n          fields: formFields,\n        });\n      });\n    }\n  }, [id, action, loadingCount]);\n\n  const backToHome = () => {\n    history.replace(`/user/view/${user}`);\n  };\n\n  return (\n    <div className=\"relative\">\n      <Card className=\"min-h\" title={name}>\n        <Loading loading={isLoading} />\n\n        {!isLoading && (\n          <div className=\"mt-4\">\n            <Formik\n              enableReinitialize={true}\n              initialValues={values}\n              onSubmit={async (values) => {\n                const fields = values.fields.map((f, i) => ({\n                  ...f,\n                  index: i,\n                  role: f.role as DatasetColumnRole,\n                }));\n\n                setLoading(true);\n                if (action === 'add') {\n                  await dashboardService.save({\n                    datasetId: +id,\n                    name: values.name,\n                    user: +user,\n                    goal: values.type as DashboardGoal,\n                    purpose: values.purpose as DashboardPurpose,\n                    colums: fields,\n                  });\n                } else {\n                  await dashboardService.update({\n                    id: +id,\n                    name: values.name,\n                    user: +user,\n                    goal: values.type as DashboardGoal,\n                    purpose: values.purpose as DashboardPurpose,\n                    colums: fields,\n                  });\n                }\n                backToHome();\n              }}\n            >\n              {({ getFieldProps, values, setFieldValue }) => (\n                <Form>\n                  <div className=\"flex -mx-4 bg-white\">\n                    <div className=\"px-4 w-1/3\">\n                      <Input name={`name`} label={`Name`} formik={{ getFieldProps }} />\n                    </div>\n                    <div className=\"px-4 w-1/3\">\n                      <Select\n                        name={`type`}\n                        label=\"Goal Type\"\n                        options={[\n                          { value: 'DECISION_MAKING', label: 'Decision Making' },\n                          { value: 'AWARENESS', label: 'Awareness' },\n                          { value: 'MOTIVATIONAL_LEARNING', label: 'Motivational Learning' },\n                          { value: 'OTHER', label: 'Other' },\n                        ]}\n                        formik={{ getFieldProps }}\n                      />\n                    </div>\n                    <div className=\"px-4 w-1/3\">\n                      <Select\n                        name={`purpose`}\n                        label=\"Goal Purpose\"\n                        options={[\n                          { value: 'STRATEGIC', label: 'Strategic' },\n                          { value: 'OPERATIONAL', label: 'Operational' },\n                          { value: 'ORGANIZATIONAL', label: 'Organizational' },\n                          { value: 'LEARNING', label: 'Learning' },\n                        ]}\n                        formik={{ getFieldProps }}\n                      />\n                    </div>\n                  </div>\n\n                  <hr className=\"mt-2 mb-4\" />\n\n                  <div>\n                    {values.fields.length > 0 &&\n                      values.fields.map((item, index) => (\n                        <div className=\"flex -mx-4 bg-white\">\n                          {/* <div className=\"px-4 flex items-center\">\n                            <FontAwesomeIcon icon=\"bars\" />\n                          </div> */}\n                          <div className=\"px-4 w-2/5\">\n                            <Input\n                              name={`fields.${index}.name`}\n                              label={`Name`}\n                              formik={{ getFieldProps }}\n                            />\n                          </div>\n                          <div className=\"px-4 w-2/5\">\n                            <Input\n                              name={`fields.${index}.type`}\n                              label={`Type`}\n                              formik={{ getFieldProps }}\n                              disabled\n                            />\n                          </div>\n                          <div className=\"px-4 w-2/5\">\n                            <Select\n                              name={`fields.${index}.role`}\n                              label=\"Type\"\n                              options={[\n                                { value: 'measure', label: 'Measure' },\n                                { value: 'dimension', label: 'Dimension' },\n                              ]}\n                              formik={{ getFieldProps }}\n                            />\n                          </div>\n                          <div className=\"px-4 w-2/5\">\n                            <Select\n                              name={`fields.${index}.aggregate`}\n                              label=\"Aggregate\"\n                              options={[\n                                { value: 'NONE', label: 'None' },\n                                { value: 'MIN', label: 'Min' },\n                                { value: 'MEAN', label: 'Mean' },\n                                { value: 'SUM', label: 'Sum' },\n                                { value: 'BIN', label: 'Bin' },\n                                { value: 'MAX', label: 'Max' },\n                                { value: 'MEDIAN', label: 'Median' },\n                              ]}\n                              formik={{ getFieldProps }}\n                              disabled={\n                                values.fields[index].role === 'dimension' ||\n                                values.fields[index].originalName === 'count'\n                              }\n                            />\n                          </div>\n                          <div className=\"px-4 flex items-center\">\n                            <button\n                              type=\"button\"\n                              className={`button ${\n                                item.removed ? 'button-success' : 'button-danger'\n                              }`}\n                              onClick={() =>\n                                setFieldValue(\n                                  `fields.${index}.removed`,\n                                  !values.fields[index].removed\n                                )\n                              }\n                            >\n                              <FontAwesomeIcon icon={item.removed ? 'plus' : 'times'} />\n                            </button>\n                          </div>\n                        </div>\n                      ))}\n                  </div>\n                  <div className=\"flex justify-end\">\n                    <button type=\"button\" className=\"button mr-2\" onClick={backToHome}>\n                      Cancel\n                    </button>\n                    <button type=\"submit\" className=\"button button-primary\">\n                      Submit\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n}\n","import { elementId } from './functions';\n\nexport function createLegend(\n  svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>,\n  id: string,\n  marginLeft: number,\n  keys: string[],\n  colorScale: (x: string) => string,\n  keysMapper?: Record<string, string>\n): void {\n  const keysLength: Record<number, number> = {};\n\n  svg\n    .append('g')\n    .selectAll('.dummyText')\n    .data(keys)\n    .enter()\n    .append('text')\n    .attr('font-family', 'sans-serif')\n    .attr('font-size', '14px')\n    .text((d) => (keysMapper ? keysMapper[d] : d))\n    .each(function (_, index) {\n      const thisWidth = this.getComputedTextLength() + 10;\n\n      keysLength[index] = 30 + (index === 0 ? thisWidth : thisWidth + keysLength[index - 1]);\n\n      this.remove();\n    });\n\n  const groupLegend = svg\n    .append('g')\n    .attr('id', elementId(id, 'group-legend'))\n    .attr('transform', `translate(${marginLeft}, 10)`);\n\n  const groupLegendItem = groupLegend\n    .selectAll('g.legend-item')\n    .data(keys)\n    .enter()\n    .append('g')\n    .attr('class', 'legend-item')\n    .attr('transform', (_, i) => `translate(${i === 0 ? 0 : keysLength[i - 1]}, 0)`);\n\n  groupLegendItem\n    .append('rect')\n    .attr('width', 15)\n    .attr('height', 15)\n    .attr('rx', 5)\n    .attr('fill', (d) => colorScale(d));\n\n  groupLegendItem\n    .append('text')\n    .text((d) => (keysMapper ? keysMapper[d] : d))\n    .attr('font-family', 'sans-serif')\n    .attr('font-size', '14px')\n    .attr('transform', `translate(20, 13)`);\n}\n","import { DatasetChartSpecValues } from '@junoapp/common';\nimport * as d3 from 'd3';\nimport { format } from 'date-fns';\nimport { elementId, scaleBandInvert } from './functions';\n\nconst formatter = new Intl.NumberFormat('pt-BR', {\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n}).format;\n\nexport function createTooltipVertical(\n  svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>,\n  id: string,\n  yScale: d3.ScaleLinear<number, number>,\n  data: Array<DatasetChartSpecValues>,\n  keys: string[],\n  valueMax: number,\n  marginTop: number,\n  xScaleBand?: d3.ScaleBand<string>,\n  xScaleTime?: d3.ScaleTime<number, number>\n): void {\n  const groupHover = svg.append('g').attr('id', elementId(id, 'group-data'));\n\n  svg\n    .on('mousemove', function (event: any) {\n      const [x] = (d3 as any).pointer(event);\n\n      const name = xScaleBand ? scaleBandInvert(xScaleBand)(x) : xScaleTime.invert(x);\n      const dIndex = data.findIndex((d) => {\n        console.log(d, d.name, name);\n\n        return typeof name === 'string' || typeof name === 'number'\n          ? d.name === name\n          : d.name === format(name, 'yyyy/MM/dd');\n      });\n\n      console.log(name, dIndex, data);\n\n      groupHover.selectAll('.hover-line').remove();\n      groupHover.selectAll('.hover-group').remove();\n\n      if (dIndex >= 0) {\n        const d = data[dIndex];\n        const nextD = data[dIndex + 1];\n\n        let delta = 0;\n        let useNext = false;\n\n        if (nextD && xScaleTime) {\n          delta = Math.abs(xScaleTime(new Date(d.name)) - xScaleTime(new Date(nextD.name))) / 2;\n          useNext = x > xScaleTime(new Date(d.name)) + delta;\n        }\n\n        const startX = xScaleBand\n          ? xScaleBand(d.name) + xScaleBand.bandwidth() / 2\n          : xScaleTime(new Date(useNext ? nextD.name : d.name));\n\n        groupHover\n          .append('rect')\n          .attr('class', 'hover-line')\n          .attr('x', startX)\n          .attr('y', yScale(valueMax))\n          .attr('width', 1)\n          .attr('height', yScale(0) - marginTop)\n          .attr('fill', '#ccc')\n          .attr('z-index', 999);\n\n        const groupHoverContent = groupHover\n          .append('g')\n          .attr('class', 'hover-group')\n          .attr('pointer-events', 'none')\n          .attr('transform', `translate(${startX + 5}, ${yScale(valueMax)})`);\n\n        groupHoverContent\n          .append('rect')\n          .attr('class', 'hover-container')\n          .attr('fill', 'white')\n          .attr('stroke', '#ccc')\n          .attr('width', 100)\n          .attr('height', 42);\n\n        groupHoverContent\n          .append('rect')\n          .attr('class', 'hover-header-container')\n          .attr('fill', '#aaa')\n          .attr('width', 100)\n          .attr('height', 20);\n\n        groupHoverContent\n          .append('rect')\n          .attr('class', 'hover-divider')\n          .attr('fill', '#ccc')\n          .attr('width', 1)\n          .attr('height', 22)\n          .attr('y', 20);\n\n        const title = groupHoverContent\n          .append('text')\n          .text(\n            typeof name === 'string' || typeof name === 'number'\n              ? name\n              : format(new Date(useNext ? nextD.name : d.name), 'dd/MM/yyyy')\n          )\n          .attr('transform', 'translate(5, 15)')\n          .attr('fill', '#fff')\n          .attr('font-size', 12)\n          .attr('font-weight', 'bold');\n\n        const titleWidth = title.node().getComputedTextLength();\n\n        const text = groupHoverContent\n          .append('text')\n          .text(keys[0])\n          .attr('transform', 'translate(5, 35)')\n          .attr('color', 'black')\n          .attr('font-size', 12);\n\n        const textWidth = text.node().getComputedTextLength();\n\n        const value = groupHoverContent\n          .append('text')\n          .text(formatter((useNext ? nextD : d).value))\n          .attr('transform', `translate(${textWidth + 15}, 35)`)\n          .attr('color', 'black')\n          .attr('font-size', 12);\n\n        const valueWidth = value.node().getComputedTextLength();\n\n        d3.select('.hover-container').attr(\n          'width',\n          Math.max(titleWidth, textWidth + valueWidth) + 20\n        );\n        d3.select('.hover-header-container').attr(\n          'width',\n          Math.max(titleWidth, textWidth + valueWidth) + 20\n        );\n        d3.select('.hover-divider').attr('x', textWidth + 10);\n\n        const positionX = startX + groupHoverContent.node().getBBox().width;\n\n        if (positionX + 50 > svg.node().getBBox().width) {\n          groupHoverContent.attr(\n            'transform',\n            `translate(${startX - groupHoverContent.node().getBBox().width - 5}, ${yScale(\n              valueMax\n            )})`\n          );\n        }\n      }\n    })\n    .on('mouseleave', () => {\n      groupHover.selectAll('.hover-line').remove();\n      groupHover.selectAll('.hover-group').remove();\n    });\n}\n","import { useState, useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { createColorScale, generateId } from '../utils/functions';\nimport { UserContext } from '../contexts/user.context';\nimport { createLegend } from '../utils/legends';\nimport { createTooltipVertical } from '../utils/tooltip-vertical';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function VerticalBarChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n  keys: string[];\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n  const { disability } = useContext(UserContext);\n\n  useEffect(() => {\n    const margin = {\n      top: 40,\n      bottom: 30,\n      left: 40,\n      right: 10,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetChartSpecValues) => d.name;\n    const yAcessor = (d: DatasetChartSpecValues) => d.value;\n\n    const keys = props.data.map(xAcessor);\n    const valueMax = d3.max(props.data, yAcessor);\n\n    const xScale = d3\n      .scaleBand()\n      .domain(keys)\n      .paddingInner(0.1)\n      .paddingOuter(0.1)\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([height - margin.bottom, margin.top]);\n\n    const colorScale = createColorScale(disability, keys);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    groupData\n      .selectAll('rect.data-item')\n      .data(props.data)\n      .enter()\n      .append('rect')\n      .attr('class', 'data-item')\n      .attr('x', (d) => xScale(d.name) as number)\n      .attr('y', (d) => yScale(d.value))\n      .attr('width', xScale.bandwidth())\n      .attr('height', (d) => yScale(0) - yScale(d.value))\n      .attr('fill', (d) => colorScale(d.name))\n      .attr('pointer-events', 'none');\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    createLegend(\n      svg,\n      id,\n      margin.left,\n      colorScale.domain().length > colorScale.range().length ? props.keys : colorScale.domain(),\n      colorScale\n    );\n    createTooltipVertical(svg, id, yScale, props.data, props.keys, valueMax, margin.top, xScale);\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props, disability]);\n\n  return (\n    <div>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { DashboardRecommendation } from '@junoapp/common';\nimport ky from 'ky';\nimport { API_URL } from '../utils/constants';\n\nexport async function getSpec(datasetId: number): Promise<DashboardRecommendation> {\n  return ky.get(`${API_URL}/api/dashboard-recommendation/${datasetId}/spec`).json();\n}\n","import { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { generateId } from '../utils/functions';\nimport { createLegend } from '../utils/legends';\nimport { createTooltipVertical } from '../utils/tooltip-vertical';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function LineChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n  keys: string[];\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n\n  useEffect(() => {\n    const margin = {\n      top: 40,\n      bottom: 30,\n      left: 80,\n      right: 80,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetChartSpecValues) => new Date(d.name);\n    const yAcessor = (d: DatasetChartSpecValues) => d.value;\n\n    const valueMax = d3.max(props.data, yAcessor);\n\n    const extent = d3.extent(props.data, xAcessor);\n\n    const xScale = d3\n      .scaleTime()\n      .domain(extent)\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    const lineGenerator = d3\n      .line<DatasetChartSpecValues>()\n      .defined((d) => !isNaN(d.value))\n      .x((d) => xScale(new Date(d.name)))\n      .y((d) => yScale(d.value));\n\n    groupData\n      .append('path')\n      .datum(props.data)\n      .attr('d', lineGenerator)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('fill', 'none')\n      .attr('stroke', 'steelblue')\n      .attr('stroke-width', 1.5)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round');\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    createLegend(svg, id, margin.left, props.keys, () => 'steelblue');\n    createTooltipVertical(\n      svg,\n      id,\n      yScale,\n      props.data,\n      props.keys,\n      valueMax,\n      margin.top,\n      null,\n      xScale\n    );\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props]);\n\n  return (\n    <div>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { generateId } from '../utils/functions';\nimport { getDay, format, addDays, startOfWeek, parse, differenceInDays } from 'date-fns';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function Heatmap(props: { name: string; data: Array<DatasetChartSpecValues> }): JSX.Element {\n  const [id] = useState<string>(generateId());\n\n  useEffect(() => {\n    const margin = {\n      top: 10,\n      bottom: 30,\n      left: 80,\n      right: 80,\n    };\n\n    const height = 250;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetChartSpecValues) => new Date(d.name);\n\n    const max = d3.max(props.data, (d) => d.value);\n\n    const dayOfWeeks = Array.from(Array(7)).map((e, i) =>\n      format(addDays(startOfWeek(new Date()), i), 'E')\n    );\n\n    const formatWeeek = (d: DatasetChartSpecValues) =>\n      format(startOfWeek(xAcessor(d)), 'dd/MM/yyyy');\n\n    const weeks = [...new Set(props.data.map((d) => formatWeeek(d)))];\n\n    const xScale = d3\n      .scaleBand()\n      .domain(weeks)\n      .range([margin.left, width - margin.right])\n      .padding(0.1);\n\n    const yScale = d3\n      .scaleBand()\n      .range([height - margin.bottom, margin.top])\n      .domain(dayOfWeeks)\n      .padding(0.1);\n\n    groupData\n      .selectAll('rect')\n      .data(props.data.filter((d) => !isNaN(d.value)))\n      .enter()\n      .append('rect')\n      .attr('x', (d) => xScale(formatWeeek(d)))\n      .attr('y', (d) => yScale(dayOfWeeks[getDay(xAcessor(d))]))\n      .attr('width', xScale.bandwidth())\n      .attr('height', yScale.bandwidth())\n      .attr('fill', (d) => d3.interpolateBlues(d.value / max));\n\n    const extent = d3.extent(props.data, (d) => parse(d.name, 'yyyy/MM/dd', new Date()));\n    const delta = differenceInDays(extent[1], extent[0]);\n\n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickValues(xScale.domain().filter((d, i) => !(i % Math.ceil(delta * 0.0065))));\n    const yAxis = d3.axisLeft(yScale);\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props]);\n\n  return (\n    <div>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { DatasetChartSpecValues } from '@junoapp/common';\nimport * as d3 from 'd3';\nimport { format } from 'date-fns';\nimport { elementId, scaleBandInvert } from './functions';\n\nconst formatter = new Intl.NumberFormat('pt-BR', {\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n}).format;\n\nexport function createTooltipHorizontal(\n  svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>,\n  id: string,\n  xScale: d3.ScaleLinear<number, number>,\n  data: Array<DatasetChartSpecValues>,\n  keys: string[],\n  valueMax: number,\n  marginLeft: number,\n  yScaleBand?: d3.ScaleBand<string>,\n  yScaleTime?: d3.ScaleTime<number, number>\n): void {\n  const groupHover = svg.append('g').attr('id', elementId(id, 'group-data'));\n\n  svg\n    .on('mousemove', function (event: any) {\n      const [x, y] = (d3 as any).pointer(event);\n\n      const name = yScaleBand ? scaleBandInvert(yScaleBand)(y) : yScaleTime.invert(y);\n      const dIndex = data.findIndex((d) =>\n        typeof name === 'string' ? d.name === name : d.name === format(name, 'yyyy/MM/dd')\n      );\n\n      groupHover.selectAll('.hover-line').remove();\n      groupHover.selectAll('.hover-group').remove();\n\n      if (dIndex >= 0) {\n        const d = data[dIndex];\n        const nextD = data[dIndex + 1];\n\n        let delta = 0;\n        let useNext = false;\n\n        if (nextD && yScaleTime) {\n          delta = Math.abs(yScaleTime(new Date(d.name)) - yScaleTime(new Date(nextD.name))) / 2;\n          useNext = y > yScaleTime(new Date(d.name)) + delta;\n        }\n\n        const startY = yScaleBand\n          ? yScaleBand(d.name) + yScaleBand.bandwidth() / 2\n          : yScaleTime(new Date(useNext ? nextD.name : d.name));\n\n        groupHover\n          .append('rect')\n          .attr('class', 'hover-line')\n          .attr('x', xScale(0))\n          .attr('y', startY)\n          .attr('width', xScale(valueMax))\n          .attr('height', 1)\n          .attr('fill', '#ccc')\n          .attr('z-index', 999);\n\n        const groupHoverContent = groupHover\n          .append('g')\n          .attr('class', 'hover-group')\n          .attr('pointer-events', 'none')\n          .attr('transform', `translate(${x}, ${startY + 5})`);\n\n        groupHoverContent\n          .append('rect')\n          .attr('class', 'hover-container')\n          .attr('fill', 'white')\n          .attr('stroke', '#ccc')\n          .attr('width', 100)\n          .attr('height', 42);\n\n        groupHoverContent\n          .append('rect')\n          .attr('class', 'hover-header-container')\n          .attr('fill', '#aaa')\n          .attr('width', 100)\n          .attr('height', 20);\n\n        groupHoverContent\n          .append('rect')\n          .attr('class', 'hover-divider')\n          .attr('fill', '#ccc')\n          .attr('width', 1)\n          .attr('height', 22)\n          .attr('y', 20);\n\n        const title = groupHoverContent\n          .append('text')\n          .text(\n            typeof name === 'string'\n              ? name\n              : format(new Date(useNext ? nextD.name : d.name), 'dd/MM/yyyy')\n          )\n          .attr('transform', 'translate(5, 15)')\n          .attr('fill', '#fff')\n          .attr('font-size', 12)\n          .attr('font-weight', 'bold');\n\n        const titleWidth = title.node().getComputedTextLength();\n\n        const text = groupHoverContent\n          .append('text')\n          .text(keys[0])\n          .attr('transform', 'translate(5, 35)')\n          .attr('color', 'black')\n          .attr('font-size', 12);\n\n        const textWidth = text.node().getComputedTextLength();\n\n        const value = groupHoverContent\n          .append('text')\n          .text(formatter((useNext ? nextD : d).value))\n          .attr('transform', `translate(${textWidth + 15}, 35)`)\n          .attr('color', 'black')\n          .attr('font-size', 12);\n\n        const valueWidth = value.node().getComputedTextLength();\n\n        d3.select('.hover-container').attr(\n          'width',\n          Math.max(textWidth + valueWidth, titleWidth) + 20\n        );\n        d3.select('.hover-header-container').attr(\n          'width',\n          Math.max(textWidth + valueWidth, titleWidth) + 20\n        );\n        d3.select('.hover-divider').attr('x', textWidth + 10);\n\n        const positionX = x + groupHoverContent.node().getBBox().width;\n        const positionY = startY + groupHoverContent.node().getBBox().height;\n\n        let moveX = x;\n        let moveY = startY + 5;\n\n        if (positionX + 50 > svg.node().getBBox().width) {\n          moveX = x - groupHoverContent.node().getBBox().width - 5;\n        }\n\n        if (positionY + 50 > svg.node().getBBox().height) {\n          moveY = startY - groupHoverContent.node().getBBox().height - 5;\n        }\n\n        groupHoverContent.attr('transform', `translate(${moveX}, ${moveY})`);\n      }\n    })\n    .on('mouseleave', () => {\n      groupHover.selectAll('.hover-line').remove();\n      groupHover.selectAll('.hover-group').remove();\n    });\n}\n","import { useState, useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { createColorScale, generateId } from '../utils/functions';\nimport { UserContext } from '../contexts/user.context';\nimport { createLegend } from '../utils/legends';\nimport { createTooltipHorizontal } from '../utils/tooltip-horizontal';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function HorizontalBarChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n  keys: string[];\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n  const { disability } = useContext(UserContext);\n\n  useEffect(() => {\n    const margin = {\n      top: 40,\n      bottom: 30,\n      left: 0,\n      right: 10,\n    };\n\n    const height = 450;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetChartSpecValues) => d.name;\n    const yAcessor = (d: DatasetChartSpecValues) => d.value;\n\n    const keys = props.data.map(xAcessor);\n    const valueMax = d3.max(props.data, yAcessor);\n\n    var maxTextWidth = 0;\n\n    svg\n      .append('g')\n      .selectAll('.dummyText')\n      .data(keys)\n      .enter()\n      .append('text')\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', '14px')\n      .text((d) => d)\n      .each(function () {\n        const thisWidth = this.getComputedTextLength() + 10;\n        if (thisWidth > maxTextWidth) {\n          maxTextWidth = thisWidth;\n        }\n\n        this.remove();\n      });\n\n    margin.left = maxTextWidth;\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleBand()\n      .domain(keys)\n      .paddingInner(0.1)\n      .paddingOuter(0.1)\n      .range([margin.top, height - margin.bottom]);\n\n    const colorScale = createColorScale(disability, keys);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    groupData\n      .selectAll('rect.data-item')\n      .data(props.data)\n      .enter()\n      .append('rect')\n      .attr('class', 'data-item')\n      .attr('x', xScale(0))\n      .attr('y', (d) => yScale(d.name))\n      .attr('width', (d) => xScale(d.value) - xScale(0))\n      .attr('height', yScale.bandwidth())\n      .attr('fill', (d) => colorScale(d.name))\n      .attr('pointer-events', 'none');\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis\n      .append('g')\n      .call(yAxis)\n      .attr('transform', `translate(${margin.left}, 0)`)\n      .attr('class', 'y-axis');\n\n    createLegend(\n      svg,\n      id,\n      margin.left,\n      colorScale.domain().length > colorScale.range().length ? props.keys : colorScale.domain(),\n      colorScale\n    );\n\n    createTooltipHorizontal(svg, id, xScale, props.data, props.keys, valueMax, margin.left, yScale);\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props, disability]);\n\n  return (\n    <div>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import * as d3 from 'd3';\nimport { elementId } from './functions';\n\ntype GroupedData = {\n  name: string;\n  values: Array<{\n    name: string;\n    value: number;\n  }>;\n};\n\nconst formatter = new Intl.NumberFormat('pt-BR', {\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n}).format;\n\nexport function createTooltipGroupHorizontal(\n  svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>,\n  groupData: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n  id: string,\n  xScale: d3.ScaleLinear<number, number>,\n  yScale: d3.ScaleBand<string>,\n  colorScale: d3.ScaleOrdinal<string, string>,\n  data: Array<GroupedData>,\n  valueMax: number,\n  marginLeft: number\n): void {\n  const groupHover = svg.append('g').attr('id', elementId(id, 'group-data'));\n\n  groupData\n    .selectAll('g.group-area')\n    .data(data)\n    .enter()\n    .append('rect')\n    .attr('class', 'group-area')\n    .attr('x', (d) => xScale(0))\n    .attr('y', (d) => yScale(d.name))\n    .attr('width', (d) => xScale(valueMax) - marginLeft)\n    .attr('height', (d) => yScale.bandwidth())\n    .attr('fill', 'transparent')\n    .on('mousemove', function (event: any, d: any) {\n      const [x] = (d3 as any).pointer(event);\n\n      groupHover.selectAll('.hover-line').remove();\n      groupHover.selectAll('.hover-group').remove();\n\n      const y = yScale(d.name) + yScale.bandwidth() / 2;\n      const height = 22 + d.values.length * 20;\n\n      groupHover\n        .append('rect')\n        .attr('class', 'hover-line')\n        .attr('x', xScale(0))\n        .attr('y', y)\n        .attr('width', xScale(valueMax))\n        .attr('height', 1)\n        .attr('fill', '#ccc')\n        .attr('z-index', 999);\n\n      const groupHoverContent = groupHover\n        .append('g')\n        .attr('class', 'hover-group')\n        .attr('pointer-events', 'none')\n        .attr('transform', `translate(${x}, ${y + 5})`);\n\n      groupHoverContent\n        .append('rect')\n        .attr('class', 'hover-container')\n        .attr('fill', 'white')\n        .attr('stroke', '#ccc')\n        .attr('width', 100)\n        .attr('height', height);\n\n      groupHoverContent\n        .append('rect')\n        .attr('class', 'hover-header-container')\n        .attr('fill', '#aaa')\n        .attr('width', 100)\n        .attr('height', 20);\n\n      groupHoverContent\n        .append('rect')\n        .attr('class', 'hover-divider')\n        .attr('fill', '#ccc')\n        .attr('width', 1)\n        .attr('height', 2 + d.values.length * 20)\n        .attr('y', 20);\n\n      const title = groupHoverContent\n        .append('text')\n        .text(d.name)\n        .attr('transform', 'translate(5, 15)')\n        .attr('fill', '#fff')\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold');\n\n      const titleWidth = title.node().getComputedTextLength();\n\n      groupHoverContent\n        .selectAll('rect.color-item')\n        .data(d.values)\n        .enter()\n        .append('rect')\n        .attr('class', 'color-item')\n        .attr('transform', (d, index) => `translate(5, ${23 + 20 * index})`)\n        .attr('width', 15)\n        .attr('height', 15)\n        .attr('rx', 5)\n        .attr('fill', (d) => colorScale(d['name']));\n\n      let textWidth = 0;\n      groupHoverContent\n        .selectAll('text.text-title')\n        .data(d.values)\n        .enter()\n        .append('text')\n        .text((d) => d['name'])\n        .attr('class', 'text-title')\n        .attr('transform', (d, index) => `translate(24, ${35 + 20 * index})`)\n        .attr('color', 'black')\n        .attr('font-size', 12)\n        .each(function () {\n          textWidth = Math.max(textWidth, this.getComputedTextLength() + 35);\n        });\n\n      let valueWidth = 0;\n\n      groupHoverContent\n        .selectAll('text.text-value')\n        .data(d.values)\n        .enter()\n        .append('text')\n        .text((d) => formatter(d['value']))\n        .attr('class', 'text-value')\n        .attr('transform', (d, index) => `translate(${textWidth + 15}, ${35 + 20 * index})`)\n        .attr('color', 'black')\n        .attr('font-size', 12)\n        .each(function () {\n          valueWidth = Math.max(valueWidth, this.getComputedTextLength() + 10);\n        });\n\n      d3.select('.hover-container').attr(\n        'width',\n        Math.max(textWidth + valueWidth, titleWidth) + 20\n      );\n      d3.select('.hover-header-container').attr(\n        'width',\n        Math.max(textWidth + valueWidth, titleWidth) + 20\n      );\n      d3.select('.hover-divider').attr('x', textWidth + 10);\n\n      const positionX = x + groupHoverContent.node().getBBox().width;\n      const positionY = y + groupHoverContent.node().getBBox().height;\n\n      let moveX = x;\n      let moveY = y + 5;\n\n      if (positionX + 50 > svg.node().getBBox().width) {\n        moveX = x - groupHoverContent.node().getBBox().width - 5;\n      }\n\n      if (positionY + 50 > svg.node().getBBox().height) {\n        moveY = y - groupHoverContent.node().getBBox().height - 5;\n      }\n\n      groupHoverContent.attr('transform', `translate(${moveX}, ${moveY})`);\n    })\n    .on('mouseleave', () => {\n      groupHover.selectAll('.hover-line').remove();\n      groupHover.selectAll('.hover-group').remove();\n    });\n}\n","import { useState, useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { createColorScale, generateId } from '../utils/functions';\nimport { UserContext } from '../contexts/user.context';\nimport { createLegend } from '../utils/legends';\nimport { createTooltipGroupHorizontal } from '../utils/tooltip-group-horizontal';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function StackedHorizontalBarChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n  const { disability } = useContext(UserContext);\n\n  useEffect(() => {\n    const margin = {\n      top: 40,\n      bottom: 30,\n      left: 100,\n      right: 10,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    type StackedData = {\n      name: string;\n      total: number;\n      values: Array<{\n        name: string;\n        end: number;\n        start: number;\n        value: number;\n      }>;\n    };\n\n    let valueMax = Number.MIN_SAFE_INTEGER;\n\n    props.data.sort((a, b) => a.name2.localeCompare(b.name2));\n\n    const data: Array<StackedData> = props.data.reduce(\n      (prev: StackedData[], curr: DatasetChartSpecValues) => {\n        let item = prev.find((p) => p.name === curr.name);\n\n        if (!item) {\n          item = {\n            name: curr.name,\n            total: 0,\n            values: [],\n          };\n\n          prev.push(item);\n        }\n\n        item.values.push({\n          name: curr.name2,\n          start: item.total,\n          end: item.total + curr.value,\n          value: curr.value,\n        });\n\n        item.total += curr.value;\n\n        if (item.total >= valueMax) {\n          valueMax = item.total;\n        }\n\n        return prev;\n      },\n      []\n    );\n\n    const keys = data.map((d) => d.name).reverse();\n    const colors = [...new Set(data.map((d) => d.values.map((v) => v.name)).flat())];\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleBand()\n      .domain(keys)\n      .paddingInner(0.1)\n      .paddingOuter(0.1)\n      .range([height - margin.bottom, margin.top]);\n\n    const colorScale = createColorScale(disability, colors);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    createTooltipGroupHorizontal(\n      svg,\n      groupData,\n      id,\n      xScale,\n      yScale,\n      colorScale,\n      data,\n      valueMax,\n      margin.left\n    );\n\n    const groupItem = groupData\n      .selectAll('g.group-item')\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('class', 'group-item')\n      .attr('transform', (d) => `translate(0, ${yScale(d.name)})`);\n\n    groupItem\n      .selectAll('rect.data-item')\n      .data((d) => d.values)\n      .enter()\n      .append('rect')\n      .attr('class', 'data-item')\n      .attr('x', (d) => xScale(d.start))\n      .attr('width', (d) => xScale(d.end) - xScale(d.start))\n      .attr('height', yScale.bandwidth())\n      .attr('fill', (d) => colorScale(d.name))\n      .attr('pointer-events', 'none');\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    createLegend(svg, id, margin.left, colors, colorScale);\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props, disability]);\n\n  return (\n    <div>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport {\n  DatasetRecommendationMultipleLinesAxis,\n  DatasetRecommendationMultipleLinesData,\n} from '@junoapp/common';\n\nimport { createColorScale, generateId } from '../utils/functions';\nimport { UserContext } from '../contexts/user.context';\nimport { createLegend } from '../utils/legends';\nimport { format } from 'date-fns';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nconst formatter = new Intl.NumberFormat('pt-BR', {\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n}).format;\n\nexport function MultipleLineChart(props: {\n  name: string;\n  data: Array<DatasetRecommendationMultipleLinesData>;\n  axis: DatasetRecommendationMultipleLinesAxis;\n  keys: string[];\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n  const { disability } = useContext(UserContext);\n\n  useEffect(() => {\n    const margin = {\n      top: 40,\n      bottom: 30,\n      left: 80,\n      right: 80,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetRecommendationMultipleLinesData) => new Date(d.name);\n\n    const valueMaxLeft = d3.max(props.data, (d) =>\n      d3.max(\n        Object.keys(d.values)\n          .filter((k) => props.axis[k] === 'left')\n          .map((k) => d.values[k])\n      )\n    );\n\n    const valueMaxRight = d3.max(props.data, (d) =>\n      d3.max(\n        Object.keys(d.values)\n          .filter((k) => props.axis[k] === 'right')\n          .map((k) => d.values[k])\n      )\n    );\n\n    const hasRightAxis = Object.values(props.axis).some((a) => a === 'right');\n\n    const extent = d3.extent(props.data, xAcessor);\n    const keys = [\n      ...new Set([\n        ...Object.keys(props.data[0].values),\n        ...Object.keys(props.data[1].values),\n        ...Object.keys(props.data[props.data.length - 2].values),\n        ...Object.keys(props.data[props.data.length - 1].values),\n      ]),\n    ].filter((k) => props.axis[k]);\n\n    const colorScale = createColorScale(disability, keys);\n\n    const xScale = d3\n      .scaleTime()\n      .domain(extent)\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, valueMaxLeft])\n      .range([height - margin.bottom, margin.top]);\n\n    const y2Scale = d3\n      .scaleLinear()\n      .domain([0, valueMaxRight])\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n    const y2Axis = d3.axisRight(y2Scale);\n\n    for (const key of keys) {\n      const leftLineGenerator = d3\n        .line<DatasetRecommendationMultipleLinesData>()\n        .defined((d) => !isNaN(d.values[key]))\n        .x((d) => xScale(new Date(d.name)))\n        .y((d) => yScale(d.values[key]));\n\n      const rightLineGenerator = d3\n        .line<DatasetRecommendationMultipleLinesData>()\n        .defined((d) => !isNaN(d.values[key]))\n        .x((d) => xScale(new Date(d.name)))\n        .y((d) => y2Scale(d.values[key]));\n\n      groupData\n        .append('path')\n        .datum(props.data)\n        .attr('d', props.axis[key] === 'left' ? leftLineGenerator : rightLineGenerator)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('fill', 'none')\n        .attr('stroke', colorScale(key))\n        .attr('stroke-width', 1.5)\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-linecap', 'round');\n    }\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    if (hasRightAxis) {\n      groupAxis\n        .append('g')\n        .call(y2Axis)\n        .attr('transform', `translate(${width - margin.right}, 0)`);\n    }\n\n    const keysMapper: Record<string, string> = keys.reduce(\n      (prev, curr, index) => ({\n        ...prev,\n        [curr]: props.keys[index],\n      }),\n      {}\n    );\n\n    createLegend(svg, id, margin.left, keys, colorScale, keysMapper);\n\n    const groupHover = svg.append('g').attr('id', elementId(id, 'group-data'));\n\n    svg\n      .on('mousemove', function (event: any) {\n        const [x] = (d3 as any).pointer(event);\n\n        const name = xScale.invert(x);\n        const dIndex = props.data.findIndex((d) => d.name === format(name, 'yyyy/MM/dd'));\n\n        groupHover.selectAll('.hover-line').remove();\n        groupHover.selectAll('.hover-group').remove();\n\n        if (dIndex >= 0) {\n          const d = props.data[dIndex];\n          const nextD = props.data[dIndex + 1];\n\n          let delta = 0;\n          let useNext = false;\n\n          if (nextD && xScale) {\n            delta = Math.abs(xScale(new Date(d.name)) - xScale(new Date(nextD.name))) / 2;\n            useNext = x > xScale(new Date(d.name)) + delta;\n          }\n\n          const startX = xScale(new Date(useNext ? nextD.name : d.name));\n          const height = 22 + keys.length * 20;\n\n          groupHover\n            .append('rect')\n            .attr('class', 'hover-line')\n            .attr('x', startX)\n            .attr('y', yScale(valueMaxLeft))\n            .attr('width', 1)\n            .attr('height', yScale(0) - margin.top)\n            .attr('fill', '#ccc')\n            .attr('z-index', 999);\n\n          const groupHoverContent = groupHover\n            .append('g')\n            .attr('class', 'hover-group')\n            .attr('pointer-events', 'none')\n            .attr('transform', `translate(${startX + 5}, ${yScale(valueMaxLeft)})`);\n\n          groupHoverContent\n            .append('rect')\n            .attr('class', 'hover-container')\n            .attr('fill', 'white')\n            .attr('stroke', '#ccc')\n            .attr('width', 100)\n            .attr('height', height);\n\n          groupHoverContent\n            .append('rect')\n            .attr('class', 'hover-header-container')\n            .attr('fill', '#aaa')\n            .attr('width', 100)\n            .attr('height', 20);\n\n          groupHoverContent\n            .append('rect')\n            .attr('class', 'hover-divider')\n            .attr('fill', '#ccc')\n            .attr('width', 1)\n            .attr('height', 2 + keys.length * 20)\n            .attr('y', 20);\n\n          groupHoverContent\n            .append('text')\n            .text(\n              typeof name === 'string'\n                ? name\n                : format(new Date(useNext ? nextD.name : d.name), 'dd/MM/yyyy')\n            )\n            .attr('transform', 'translate(5, 15)')\n            .attr('fill', '#fff')\n            .attr('font-size', 12)\n            .attr('font-weight', 'bold');\n\n          groupHoverContent\n            .selectAll('rect.color-item')\n            .data(keys)\n            .enter()\n            .append('rect')\n            .attr('class', 'color-item')\n            .attr('transform', (d, index) => `translate(5, ${23 + 20 * index})`)\n            .attr('width', 15)\n            .attr('height', 15)\n            .attr('rx', 5)\n            .attr('fill', (d) => colorScale(d));\n\n          let textWidth = 0;\n          groupHoverContent\n            .selectAll('text.text-title')\n            .data(keys)\n            .enter()\n            .append('text')\n            .text((d) => keysMapper[d])\n            .attr('class', 'text-title')\n            .attr('transform', (d, index) => `translate(24, ${35 + 20 * index})`)\n            .attr('color', 'black')\n            .attr('font-size', 12)\n            .each(function () {\n              textWidth = Math.max(textWidth, this.getComputedTextLength() + 35);\n            });\n\n          let valueWidth = 0;\n          groupHoverContent\n            .selectAll('text.text-value')\n            .data(keys)\n            .enter()\n            .append('text')\n            .text((dd) => (d.values[dd] ? formatter(d.values[dd]) : '-'))\n            .attr('class', 'text-value')\n            .attr('transform', (d, index) => `translate(${textWidth + 15}, ${35 + 20 * index})`)\n            .attr('color', 'black')\n            .attr('font-size', 12)\n            .each(function () {\n              valueWidth = Math.max(valueWidth, this.getComputedTextLength() + 10);\n            });\n\n          d3.select('.hover-container').attr('width', textWidth + valueWidth + 20);\n          d3.select('.hover-header-container').attr('width', textWidth + valueWidth + 20);\n          d3.select('.hover-divider').attr('x', textWidth + 10);\n\n          const positionX = startX + groupHoverContent.node().getBBox().width;\n\n          if (positionX + 50 > svg.node().getBBox().width) {\n            groupHoverContent.attr(\n              'transform',\n              `translate(${startX - groupHoverContent.node().getBBox().width - 5}, ${yScale(\n                valueMaxLeft\n              )})`\n            );\n          }\n        }\n      })\n      .on('mouseleave', () => {\n        groupHover.selectAll('.hover-line').remove();\n        groupHover.selectAll('.hover-group').remove();\n      });\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props, disability]);\n\n  return (\n    <div>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues, generateId } from '@junoapp/common';\nimport { API_URL } from '../utils/constants';\n\nexport function MapChart(props: {\n  name: string;\n  geofile: string;\n  data: Array<DatasetChartSpecValues>;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n\n  useEffect(() => {\n    d3.json(`${API_URL}/${props.geofile}`).then((shape) => {\n      const height = 600;\n\n      const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n      const width = svg.node()?.getBoundingClientRect().width;\n\n      const projection = d3.geoMercator().fitExtent(\n        [\n          [20, 20],\n          [width, height],\n        ],\n        shape as any\n      );\n\n      const path = d3.geoPath().projection(projection);\n      const max = d3.max(props.data, (d) => d.value);\n\n      const accessor = (d) => {\n        const item = props.data.find((datum) => datum.name.trim() === d.properties.name);\n\n        if (item) {\n          return d3.interpolateBlues(item.value / max);\n        }\n\n        return 'white';\n      };\n\n      svg\n        .append('g')\n        .selectAll('path')\n        .data(shape['features'])\n        .enter()\n        .append('path')\n        .attr('d', path)\n        .style('fill', (d) => accessor(d))\n        .style('stroke', '#ccc')\n        .attr('alt', (d) => d['properties'].name);\n\n      return () => {\n        svg.remove();\n      };\n    });\n  }, [id, props.data, props.geofile]);\n\n  return (\n    <div>\n      <div id={id}></div>\n    </div>\n  );\n}\n\nexport default MapChart;\n","import { useEffect, useRef } from 'react';\nimport mapbox from 'mapbox-gl';\nimport { DatasetGeoChartSpecValues } from '@junoapp/common';\n\nmapbox.accessToken =\n  'pk.eyJ1IjoicGF1bG9tZW5lemVzIiwiYSI6ImNrMHZrc3Z2NjEwODMzbG52emduZWFkeTIifQ.fUByXk2mj50HO1xPDiTr5w';\n\nexport function MapBox(props: {\n  name: string;\n  data: Array<DatasetGeoChartSpecValues>;\n}): JSX.Element {\n  const mapContainer = useRef(null);\n  const map = useRef<mapbox.Map>(null);\n\n  useEffect(() => {\n    if (map.current) return;\n\n    let latMin = Number.MAX_VALUE;\n    let latMax = Number.MIN_VALUE;\n\n    let lngMin = Number.MAX_VALUE;\n    let lngMax = Number.MIN_VALUE;\n\n    const data = props.data.filter((d) => d.value > 0);\n\n    const features = data.map((d) => {\n      latMin = Math.min(latMin, +d.latitude);\n      latMax = Math.max(latMax, +d.latitude);\n\n      lngMin = Math.min(lngMin, +d.longitude);\n      lngMax = Math.max(lngMax, +d.longitude);\n\n      return {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [d.longitude, d.latitude],\n        },\n        properties: {\n          title: d.name,\n        },\n      };\n    });\n\n    map.current = new mapbox.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      zoom: 9,\n      bounds: [\n        [latMin, latMax],\n        [lngMin, lngMax],\n      ],\n    });\n\n    map.current.on('load', () => {\n      map.current.addSource('points', {\n        type: 'geojson',\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 50,\n        data: {\n          type: 'FeatureCollection',\n          features: features as any,\n        },\n      });\n\n      map.current.addLayer({\n        id: 'points',\n        type: 'circle',\n        source: 'points',\n        paint: {\n          'circle-color': '#919ad7',\n          'circle-opacity': 0.7,\n          'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40],\n        },\n      });\n\n      map.current.addLayer({\n        id: 'points-count',\n        type: 'symbol',\n        source: 'points',\n        filter: ['has', 'point_count'],\n        layout: {\n          'text-field': '{point_count_abbreviated}',\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': 12,\n        },\n      });\n    });\n  }, [props.data]);\n\n  return (\n    <div className=\"relative mb-4 mt-4\" style={{ height: 600 }}>\n      <div ref={mapContainer} className=\"map-container mapContainer\" />\n    </div>\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { createColorScale, generateId } from '../utils/functions';\nimport { UserContext } from '../contexts/user.context';\nimport { createLegend } from '../utils/legends';\nimport { createTooltipGroupHorizontal } from '../utils/tooltip-group-horizontal';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function GroupedHorizontalBarChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n  const { disability } = useContext(UserContext);\n\n  useEffect(() => {\n    const margin = {\n      top: 40,\n      bottom: 30,\n      left: 100,\n      right: 10,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    type GroupedData = {\n      name: string;\n      values: Array<{\n        name: string;\n        value: number;\n      }>;\n    };\n\n    let valueMax = Number.MIN_SAFE_INTEGER;\n\n    props.data.sort((a, b) => a.name2.localeCompare(b.name2));\n\n    const data: Array<GroupedData> = props.data.reduce(\n      (prev: GroupedData[], curr: DatasetChartSpecValues) => {\n        let item = prev.find((p) => p.name === curr.name);\n\n        if (!item) {\n          item = {\n            name: curr.name,\n            values: [],\n          };\n\n          prev.push(item);\n        }\n\n        item.values.push({\n          name: curr.name2,\n          value: curr.value,\n        });\n\n        if (curr.value >= valueMax) {\n          valueMax = curr.value;\n        }\n\n        return prev;\n      },\n      []\n    );\n\n    const keys = data.map((d) => d.name).reverse();\n    const groupedKeys = [...new Set(data.map((d) => d.values.map((v) => v.name)).flat())];\n\n    const colors = [...new Set(data.map((d) => d.values.map((v) => v.name)).flat())];\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleBand()\n      .domain(keys)\n      .paddingInner(0.1)\n      .paddingOuter(0.1)\n      .range([height - margin.bottom, margin.top]);\n\n    const y2Scale = d3\n      .scaleBand()\n      .domain(groupedKeys)\n      .paddingInner(0.1)\n      .paddingOuter(0.1)\n      .range([0, yScale.bandwidth()]);\n\n    const colorScale = createColorScale(disability, colors);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    const firstGroup = groupData\n      .selectAll('g.group-item')\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('class', 'group-item')\n      .attr('transform', (d) => `translate(0, ${yScale(d.name)})`)\n      .selectAll('rect.data-item')\n      .data((d) => d.values)\n      .enter()\n      .append('g')\n      .attr('class', 'data-item');\n\n    firstGroup\n      .append('rect')\n      .attr('x', (d) => xScale(0))\n      .attr('y', (d) => y2Scale(d.name))\n      .attr('width', (d) => xScale(d.value))\n      .attr('height', y2Scale.bandwidth())\n      .attr('fill', (d) => colorScale(d.name))\n      .attr('pointer-events', 'none');\n\n    firstGroup\n      .append('text')\n      .attr('x', (d) => xScale(0) + 5)\n      .attr('y', (d) => y2Scale(d.name) + y2Scale.bandwidth() - 5)\n      .attr('font-size', '12px')\n      .text((d) => d.name);\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    createLegend(svg, id, margin.left, colors, colorScale);\n\n    createTooltipGroupHorizontal(\n      svg,\n      groupData,\n      id,\n      xScale,\n      yScale,\n      colorScale,\n      data,\n      valueMax,\n      margin.left\n    );\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props, disability]);\n\n  return (\n    <div>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { VerticalBarChart } from '../charts/VerticalBarChart';\nimport {\n  DatasetRecommendation,\n  DatasetChartSpec,\n  DashboardInterface,\n  DatasetRecommendationMultipleLinesData,\n  DatasetChartSpecValues,\n  DashboardRecommendation,\n  DatasetGeoChartSpecValues,\n  DatasetSchemaAggregateFunction,\n} from '@junoapp/common';\nimport { getById } from '../services/dashboard.service';\nimport { getSpec } from '../services/dashboard-recommendation.service';\n\nimport { LineChart } from '../charts/LineChart';\nimport { Heatmap } from '../charts/Heatmap';\nimport { HorizontalBarChart } from '../charts/HorizontalBarChart';\nimport { StackedHorizontalBarChart } from '../charts/StackedHorizontalBarChart';\nimport { FieldDefBase } from 'vega-lite/build/src/channeldef';\nimport { Field } from 'vega';\nimport { InlineData } from 'vega-lite/build/src/data';\nimport { VegaLite } from 'react-vega';\nimport { MultipleLineChart } from '../charts/MultipleLineChart';\nimport { applyClass } from '../utils/functions';\nimport { Card } from '../components/ui/Card';\nimport MapChart from '../charts/MapChart';\nimport { MapBox } from '../charts/Mapbox';\nimport { GroupedHorizontalBarChart } from '../charts/GroupedHorizontalBarChart';\n\nfunction convert(value: string) {\n  return isNaN(+value) ? undefined : +value;\n}\n\nconst formatter = new Intl.NumberFormat('pt-BR', {\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n}).format;\n\nexport function Dashboard(): JSX.Element {\n  const [dashboard, setDashboard] = useState<DashboardRecommendation | undefined>(undefined);\n  const [chartData, setChartData] = useState<DatasetChartSpec[]>([]);\n  const [page, setPage] = useState<string>();\n  const [d, setD] = useState<DatasetRecommendation[]>([]);\n\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    getById(+id).then((dashboard: DashboardInterface) => {\n      getSpec(dashboard.id).then((data: DashboardRecommendation) => {\n        // setD(data);\n        setDashboard(data);\n\n        let cData: DatasetChartSpec[] = [];\n\n        setPage(data.pages[0].name);\n\n        const clampStrings = dashboard.userDatasets[0].owner.preferences\n          ? dashboard.userDatasets[0].owner.preferences.clampStrings\n          : 30;\n\n        for (const page of data.pages) {\n          for (const datum of page.charts) {\n            if (datum.multipleLines) {\n              const fieldX = [\n                ...new Set(\n                  datum.multipleLines.specs.map((spec) => (spec as any).userDimension.name)\n                ),\n              ];\n              const fieldY = [\n                ...new Set(datum.multipleLines.specs.map((spec) => (spec as any).userMeasure.name)),\n              ];\n\n              cData.push({\n                page: page.name,\n                type: 'multiple-line',\n                name:\n                  fieldX.length > 1\n                    ? `${fieldY[0]} by ${fieldX.join(', ')}`\n                    : `${fieldY.join(', ')} by ${fieldX[0]}`,\n                values: datum.multipleLines.data,\n                axis: datum.multipleLines.axis,\n                keysTitle: fieldX.length > 1 ? fieldX : fieldY,\n              });\n            } else if (Object.keys(datum.encoding).length === 3) {\n              const fieldColor = (datum.encoding.color as FieldDefBase<Field>).field.toString();\n\n              if (datum.userMeasure.aggregate === DatasetSchemaAggregateFunction.Mean) {\n                cData.push({\n                  page: page.name,\n                  type:\n                    datum.key === (datum.encoding.x as FieldDefBase<Field>).field\n                      ? 'grouped-vertical-bar'\n                      : 'grouped-horizontal-bar',\n                  name: `${datum.userMeasure.name} by ${\n                    datum.trimValues ? `Top ${clampStrings}` : ''\n                  } ${datum.userDimension.name} and ${datum.userSecondDimension.name}`,\n                  values: ((datum.data as InlineData).values as Array<any>).map((v) => ({\n                    name: v[datum.key],\n                    name2: v[fieldColor],\n                    value: convert(v[datum.value]), // isNaN(+v[datum.value]) ? undefined : +v[datum.value],\n                  })),\n                });\n              } else {\n                cData.push({\n                  page: page.name,\n                  type:\n                    datum.key === (datum.encoding.x as FieldDefBase<Field>).field\n                      ? 'stacked-vertical-bar'\n                      : 'stacked-horizontal-bar',\n                  name: `${datum.userMeasure.name} by ${\n                    datum.trimValues ? `Top ${clampStrings}` : ''\n                  } ${datum.userDimension.name} and ${datum.userSecondDimension.name}`,\n                  values: ((datum.data as InlineData).values as Array<any>).map((v) => ({\n                    name: v[datum.key],\n                    name2: v[fieldColor],\n                    value: convert(v[datum.value]), // isNaN(+v[datum.value]) ? undefined : +v[datum.value],\n                  })),\n                });\n              }\n            } else if (datum.mark === 'text') {\n              cData.push({\n                page: page.name,\n                type: datum.mark,\n                name: datum.value,\n                values: [\n                  {\n                    name: datum.value,\n                    value: +(datum.data as InlineData).values[0],\n                  },\n                ],\n              });\n            } else if (datum.mark === 'geo-lat-lng') {\n              cData.push({\n                page: page.name,\n                type: datum.mark,\n                name: `${datum.value} ${datum.userDimension.name} map`,\n                values: ((datum.data as InlineData).values as Array<any>).map((v) => ({\n                  name: v[datum.key],\n                  value: convert(v[datum.value]),\n                  latitude: v['latitude'],\n                  longitude: v['longitude'],\n                })),\n              });\n            } else {\n              cData.push({\n                page: page.name,\n                type:\n                  datum.mark === 'bar'\n                    ? datum.key === (datum.encoding.x as FieldDefBase<Field>).field\n                      ? 'vertical-bar'\n                      : 'horizontal-bar'\n                    : datum.mark,\n                name: `${datum.userMeasure.name} of ${\n                  datum.trimValues ? `Top ${clampStrings}` : ''\n                } ${datum?.userDimension?.name ?? datum.key} ${\n                  datum.mark === 'heatmap' ? 'heatmap' : ''\n                }`,\n                values: ((datum.data as InlineData).values as Array<any>).map((v) => ({\n                  name: v[datum.key],\n                  value: convert(v[datum.value]), // isNaN(+v[datum.value]) ? undefined : +v[datum.value],\n                })),\n                geofile: datum.geoFile,\n                keysTitle: [datum.userMeasure.name],\n              });\n            }\n          }\n        }\n\n        console.log(cData);\n\n        setChartData(cData);\n      });\n    });\n\n    return () => {\n      setChartData([]);\n      setD([]);\n    };\n  }, [id]);\n\n  return (\n    <div>\n      <div className=\"flex flex-wrap mb-2\">\n        {dashboard &&\n          dashboard.pages.length > 1 &&\n          dashboard.pages.map((dashboardPage) => (\n            <button\n              key={dashboardPage.name}\n              type=\"button\"\n              className={`button button-primary mr-2 mb-2 ${applyClass(\n                dashboardPage.name === page,\n                'active'\n              )}`}\n              onClick={() => setPage(dashboardPage.name)}\n            >\n              {dashboardPage.name}\n            </button>\n          ))}\n      </div>\n\n      <div className=\"flex -mx-4 mb-4\">\n        {chartData &&\n          chartData\n            .filter((chart) => chart.type === 'text')\n            .map((chart) => (\n              <Card title={chart.name} key={chart.name} className=\"mx-4\">\n                <div key={chart.name} className=\"card\">\n                  <h3>{formatter((chart.values[0] as DatasetChartSpecValues).value)}</h3>\n                </div>\n              </Card>\n            ))}\n      </div>\n\n      <div className=\"space-y-4\">\n        {chartData &&\n          chartData\n            .filter((chart) => chart.page === page && chart.type !== 'text')\n            .map((chart, index) => (\n              <div key={`${chart.name}-${index}`}>\n                <Card title={chart.name}>\n                  {chart.type === 'geoshape' && (\n                    <MapChart\n                      name={chart.name}\n                      geofile={chart.geofile}\n                      data={chart.values as DatasetChartSpecValues[]}\n                    />\n                  )}\n\n                  {chart.type === 'geo-lat-lng' && (\n                    <MapBox name={chart.name} data={chart.values as DatasetGeoChartSpecValues[]} />\n                  )}\n\n                  {chart.type === 'multiple-line' && (\n                    <MultipleLineChart\n                      name={chart.name}\n                      data={chart.values as DatasetRecommendationMultipleLinesData[]}\n                      axis={chart.axis!}\n                      keys={chart.keysTitle}\n                    />\n                  )}\n\n                  {chart.type === 'line' && (\n                    <LineChart\n                      name={chart.name}\n                      data={chart.values as DatasetChartSpecValues[]}\n                      keys={chart.keysTitle}\n                    />\n                  )}\n\n                  {chart.type === 'heatmap' && (\n                    <Heatmap name={chart.name} data={chart.values as DatasetChartSpecValues[]} />\n                  )}\n\n                  {chart.type === 'vertical-bar' && (\n                    <VerticalBarChart\n                      name={chart.name}\n                      data={chart.values as DatasetChartSpecValues[]}\n                      keys={chart.keysTitle}\n                    />\n                  )}\n\n                  {chart.type === 'horizontal-bar' && (\n                    <HorizontalBarChart\n                      name={chart.name}\n                      data={chart.values as DatasetChartSpecValues[]}\n                      keys={chart.keysTitle}\n                    />\n                  )}\n\n                  {chart.type === 'stacked-horizontal-bar' && (\n                    <StackedHorizontalBarChart\n                      name={chart.name}\n                      data={chart.values as DatasetChartSpecValues[]}\n                    />\n                  )}\n\n                  {chart.type === 'grouped-horizontal-bar' && (\n                    <GroupedHorizontalBarChart\n                      name={chart.name}\n                      data={chart.values as DatasetChartSpecValues[]}\n                    />\n                  )}\n                </Card>\n              </div>\n            ))}\n      </div>\n\n      {d &&\n        d\n          .filter((dd) => dd.mark !== 'line')\n          .map((dd) => (\n            <span>\n              <VegaLite spec={dd as any} data={dd.data as any} />\n            </span>\n          ))}\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { applyClass } from '../utils/functions';\n\nexport function useButtonGroup(\n  options: Array<{ type: string; label: string }>,\n  defaultValue: string | undefined\n): [string | undefined, () => JSX.Element, React.Dispatch<React.SetStateAction<string>>] {\n  const [state, setState] = useState<string | undefined>(defaultValue);\n\n  const ButtonGroup = () => (\n    <div className=\"flex items-start\">\n      {options &&\n        options.map((option) => (\n          <button\n            key={option.type}\n            type=\"button\"\n            className={`button button-primary rounded-none first:rounded-l-md last:rounded-r-md ${applyClass(\n              state === option.type,\n              'active'\n            )}`}\n            onClick={() => setState(option.type)}\n          >\n            {option.label}\n          </button>\n        ))}\n    </div>\n  );\n\n  return [state, ButtonGroup, setState];\n}\n","import { UserVisLiteracy } from '@junoapp/common';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\n\nimport { Input } from '../components/form/Input';\nimport { Card } from '../components/ui/Card';\nimport { useButtonGroup } from '../hooks/useButtonGroup';\nimport { save } from '../services/user.service';\n\nexport function UserAdd(): JSX.Element {\n  const history = useHistory();\n  const [visLiteracy, VisLiteracy] = useButtonGroup(\n    [\n      { type: 'LOW', label: 'Low' },\n      { type: 'MEDIUM', label: 'Medium' },\n      { type: 'HIGH', label: 'High' },\n    ],\n    'LOW'\n  );\n\n  const [colorBlind, ColorBlind] = useButtonGroup(\n    [\n      { type: 'false', label: 'No' },\n      { type: 'true', label: 'Yes' },\n    ],\n    'false'\n  );\n\n  const [dyslexic, Dyslexic] = useButtonGroup(\n    [\n      { type: 'false', label: 'No' },\n      { type: 'true', label: 'Yes' },\n    ],\n    'false'\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      disability: '',\n      visLiteracy: '',\n    },\n    onSubmit: (values) => {\n      save({\n        name: values.name,\n        disability: [\n          colorBlind === 'true' ? 'colorBlind' : false,\n          dyslexic === 'true' ? 'dyslexic' : false,\n        ]\n          .filter(Boolean)\n          .join(', '),\n        visLiteracy: visLiteracy as UserVisLiteracy,\n      }).then((user) => {\n        history.replace('/');\n      });\n    },\n  });\n\n  return (\n    <div className=\"relative\">\n      <Card className=\"min-h\" title=\"Add new user\">\n        <form className=\"w-full max-w-lg\" onSubmit={formik.handleSubmit}>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n            <div className=\"w-full px-3\">\n              <Input name=\"name\" label=\"Name\" placeholder=\"name\" formik={formik} />\n            </div>\n          </div>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n            <div className=\"w-full px-3\">\n              <label className=\"label\">Disability - Color blind</label>\n\n              <ColorBlind />\n            </div>\n          </div>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n            <div className=\"w-full px-3\">\n              <label className=\"label\">Disability - Dyslexic</label>\n\n              <Dyslexic />\n            </div>\n          </div>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n            <div className=\"w-full px-3\">\n              <label className=\"label\">Vis Literacy</label>\n\n              <VisLiteracy />\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"button\">\n            Save\n          </button>\n        </form>\n      </Card>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { formatRelative } from 'date-fns';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { getAll } from '../services/dashboard.service';\nimport { DatasetColumnRole, DashboardInterface } from '@junoapp/common';\nimport { Alert } from './ui/Alert';\nimport { Loading } from './ui/Loading';\nimport { Card } from './ui/Card';\nimport { Badge } from './ui/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function DashboardList(): JSX.Element {\n  const [datasets, setDatasets] = useState<DashboardInterface[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    const load = () => {\n      setIsLoading(true);\n\n      getAll(+id).then((datasets) => {\n        setDatasets(datasets);\n        setIsLoading(false);\n      });\n    };\n\n    load();\n  }, [id]);\n\n  const countColumns = (dataset: DashboardInterface, type: DatasetColumnRole): React.ReactNode => {\n    const count = dataset.userDatasets[0].columns.filter(\n      (column) => column.role === type && !column.removed\n    ).length;\n\n    if (count > 0) {\n      return (\n        <Badge>\n          {count} {type.toLowerCase()} column{count > 1 ? 's' : ''}\n        </Badge>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div className=\"relative flex flex-wrap -mx-4 min-h\">\n      <Loading loading={isLoading} />\n\n      {!isLoading && datasets.length === 0 && (\n        <Alert\n          title=\"No dataset loaded\"\n          message=\"Upload a CSV file or connect with a database.\"\n          className=\"mx-4\"\n        />\n      )}\n\n      {!isLoading &&\n        datasets.length > 0 &&\n        datasets.map((dashboard: DashboardInterface) => (\n          <div key={dashboard.id} className=\"w-1/3 px-4 mb-4\">\n            <Card title={dashboard.name}>\n              <div className=\"flex flex-col items-start\">\n                <Badge>CSV</Badge>\n                {countColumns(dashboard, DatasetColumnRole.MEASURE)}\n                {countColumns(dashboard, DatasetColumnRole.DIMENSION)}\n                <span className=\"text-gray-600 text-xs mb-2\">\n                  Updated {formatRelative(new Date(dashboard.updatedDate), new Date())}\n                  <br />\n                  Created {formatRelative(new Date(dashboard.createdDate), new Date())}\n                </span>\n              </div>\n              <div className=\"flex\">\n                <Link\n                  to={`/dashboard/view/${dashboard.id}`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"eye\" />\n                  View\n                </Link>\n                <Link\n                  to={`/dashboard/${dashboard.id}/edit`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"pencil-alt\" />\n                  Edit\n                </Link>\n              </div>\n            </Card>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { formatRelative } from 'date-fns';\nimport { Link } from 'react-router-dom';\n\nimport { getAll } from '../services/dataset.service';\nimport { DatasetInterface, DatasetColumnRole } from '@junoapp/common';\nimport { Alert } from './ui/Alert';\nimport { Loading } from './ui/Loading';\nimport { Card } from './ui/Card';\nimport { Badge } from './ui/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function DatasetsList(): JSX.Element {\n  const [datasets, setDatasets] = useState<DatasetInterface[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const load = () => {\n    setIsLoading(true);\n\n    getAll().then((datasets) => {\n      setDatasets(datasets);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const countColumns = (dataset: DatasetInterface, type: DatasetColumnRole): React.ReactNode => {\n    const count = dataset.columns.filter((column) => column.role === type).length;\n\n    if (count > 0) {\n      return (\n        <Badge>\n          {count} {type.toLowerCase()} column{count > 1 ? 's' : ''}\n        </Badge>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div className=\"relative flex flex-wrap -mx-4 min-h\">\n      <Loading loading={isLoading} />\n\n      {!isLoading && datasets.length === 0 && (\n        <Alert\n          title=\"No dataset loaded\"\n          message=\"Upload a CSV file or connect with a database.\"\n          className=\"mx-4\"\n        />\n      )}\n\n      {!isLoading &&\n        datasets.length > 0 &&\n        datasets.map((dataset: DatasetInterface) => (\n          <div key={dataset.id} className=\"w-1/3 px-4 mb-4\">\n            <Card title={dataset.originalname}>\n              <div className=\"flex flex-col items-start\">\n                <Badge>CSV</Badge>\n                {countColumns(dataset, DatasetColumnRole.MEASURE)}\n                {countColumns(dataset, DatasetColumnRole.DIMENSION)}\n                <span className=\"text-gray-600 text-xs mb-2\">\n                  Updated {formatRelative(new Date(dataset.updatedDate), new Date())}\n                  <br />\n                  Created {formatRelative(new Date(dataset.createdDate), new Date())}\n                </span>\n              </div>\n              <div className=\"flex\">\n                <Link\n                  to={`/dashboard/add/${dataset.id}`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"pencil-alt\" className=\"mr-1\" />\n                  Create new dashboard\n                </Link>\n              </div>\n            </Card>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { DashboardList } from '../components/DashboardList';\n\nimport { DatasetsList } from '../components/DatasetsList';\nimport { UserContext } from '../contexts/user.context';\nimport { getById } from '../services/user.service';\n\nexport function UserView(): JSX.Element {\n  const { id } = useParams<{ id: string }>();\n  const user = useContext(UserContext);\n\n  useEffect(() => {\n    getById(+id).then((userData) => {\n      user.signIn(id, userData.disability);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  return (\n    <div>\n      <div className=\"flex\">\n        <Link to={`/dataset/add`} className=\"button button-primary\">\n          Add new dataset\n        </Link>\n      </div>\n\n      <div className=\"text-lg mt-3\">My dashboards</div>\n\n      <hr />\n\n      <div className=\"mt-5\">\n        <DashboardList />\n      </div>\n\n      <div className=\"text-lg\">Public datasets</div>\n\n      <hr />\n\n      <div className=\"mt-5\">\n        <DatasetsList />\n      </div>\n    </div>\n  );\n}\n","import { useState, ChangeEvent, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { uploadDataset } from '../services/dataset.service';\nimport { Loading } from './ui/Loading';\nimport { Card } from './ui/Card';\nimport { UserContext } from '../contexts/user.context';\n\nexport function UploadFileForm(): JSX.Element {\n  const { user } = useContext(UserContext);\n  const [isLoading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const onChangeHandler = async (event: ChangeEvent<HTMLInputElement>) => {\n    event.persist();\n\n    if (event.target.files) {\n      try {\n        setLoading(true);\n\n        const response = await uploadDataset(user, event.target.files[0]);\n\n        history.push(`/dashboard/add/${response.id}`);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"relative\">\n      <Card className=\"min-h\">\n        <Loading loading={isLoading} />\n\n        {!isLoading && (\n          <div>\n            <label className=\"label\">Upload a file:</label>\n            <div className=\"mt-2\">\n              <label htmlFor=\"file\" className=\"button\">\n                Select a file\n              </label>\n              <input\n                type=\"file\"\n                className=\"hide\"\n                name=\"file\"\n                id=\"file\"\n                onChange={onChangeHandler}\n              />\n            </div>\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n}\n","import { Link, useHistory, withRouter } from 'react-router-dom';\n\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/user.context';\n\nfunction Header(): JSX.Element {\n  const history = useHistory();\n  const { user, signOut } = useContext(UserContext);\n\n  return (\n    <header className=\"bg-yellow-500 p-3 text-white text-lg font-bold flex justify-between\">\n      <Link to=\"/\">Juno</Link>\n\n      {user && (\n        <div>\n          <button type=\"button\" onClick={() => history.replace('/preferences')} className=\"mr-4\">\n            Preferences\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              signOut();\n              history.replace('/');\n            }}\n          >\n            Sair\n          </button>\n        </div>\n      )}\n    </header>\n  );\n}\n\nexport default withRouter(Header);\n","import { FieldInputProps } from 'formik';\n\nexport function Checkbox({\n  name,\n  label,\n  disabled,\n  formik,\n  checked,\n}: {\n  name: string;\n  label: string;\n  checked: boolean;\n  placeholder?: string;\n  disabled?: boolean;\n  formik: { getFieldProps: (name: string) => FieldInputProps<any> };\n}): JSX.Element {\n  return (\n    <div>\n      <label className=\"label\" htmlFor={name}>\n        {label}\n      </label>\n      <input\n        id={name}\n        type=\"checkbox\"\n        checked={checked}\n        className=\"rounded bg-gray-200 border-transparent focus:border-transparent focus:bg-gray-200 text-gray-700 focus:ring-1 focus:ring-offset-2 focus:ring-gray-500\"\n        disabled={disabled}\n        {...formik.getFieldProps(name)}\n      />\n    </div>\n  );\n}\n","import { UserVisLiteracy } from '@junoapp/common';\nimport { useFormik } from 'formik';\nimport { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Checkbox } from '../components/form/Checkbox';\nimport { Input } from '../components/form/Input';\nimport { Select } from '../components/form/Select';\nimport { Card } from '../components/ui/Card';\nimport { UserContext } from '../contexts/user.context';\nimport { useButtonGroup } from '../hooks/useButtonGroup';\nimport { getById, savePreferences } from '../services/user.service';\n\nconst types = ['NUMBER', 'STRING', 'DATE'];\nconst chartTypes = [];\n\nfor (const typeX of types) {\n  for (const typeY of types) {\n    if (typeX !== typeY) {\n      chartTypes.push({\n        typeX,\n        typeY,\n        chart: 'AUTO',\n      });\n    }\n  }\n}\n\nexport function Preferences(): JSX.Element {\n  const { user } = useContext(UserContext);\n  const history = useHistory();\n\n  const [visLiteracy, VisLiteracy, setVisLiteracy] = useButtonGroup(\n    [\n      { type: 'LOW', label: 'Low' },\n      { type: 'MEDIUM', label: 'Medium' },\n      { type: 'HIGH', label: 'High' },\n    ],\n    'LOW'\n  );\n\n  const [colorBlind, ColorBlind, setColorBlind] = useButtonGroup(\n    [\n      { type: 'false', label: 'No' },\n      { type: 'true', label: 'Yes' },\n    ],\n    'false'\n  );\n\n  const [dyslexic, Dyslexic, setDyslexic] = useButtonGroup(\n    [\n      { type: 'false', label: 'No' },\n      { type: 'true', label: 'Yes' },\n    ],\n    'false'\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      stacked: true,\n      multiline: true,\n      rightAxis: true,\n      binValues: 50,\n      clampStrings: 30,\n      chartTypes,\n    },\n    onSubmit: (values) => {\n      savePreferences(+user, {\n        ...values,\n        disability: [\n          colorBlind === 'true' ? 'colorBlind' : false,\n          dyslexic === 'true' ? 'dyslexic' : false,\n        ]\n          .filter(Boolean)\n          .join(', '),\n        visLiteracy: visLiteracy as UserVisLiteracy,\n      }).then(() => {\n        backToHome();\n      });\n    },\n  });\n\n  useEffect(() => {\n    getById(+user).then((userData) => {\n      setVisLiteracy(userData.visLiteracy);\n      setColorBlind(userData.disability.includes('colorBlind') ? 'true' : 'false');\n      setDyslexic(userData.disability.includes('dyslexic') ? 'true' : 'false');\n\n      if (userData['preferences']) {\n        formik.setFieldValue('stacked', userData['preferences'].stacked);\n        formik.setFieldValue('multiline', userData['preferences'].multiline);\n        formik.setFieldValue('rightAxis', userData['preferences'].rightAxis);\n        formik.setFieldValue('binValues', userData['preferences'].binValues);\n        formik.setFieldValue('clampStrings', userData['preferences'].clampStrings);\n\n        for (const typeX of types) {\n          for (const typeY of types) {\n            if (typeX !== typeY) {\n              const index = userData['preferences'].chartTypes.findIndex(\n                (chartType) => chartType.typeX === typeX && chartType.typeY === typeY\n              );\n\n              formik.setFieldValue(\n                `chartTypes.${index}.chart`,\n                userData['preferences'].chartTypes[index].chart\n              );\n            }\n          }\n        }\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  const backToHome = () => {\n    history.replace(`/`);\n  };\n\n  return (\n    <Card title=\"Preferences\">\n      <form className=\"w-full\" onSubmit={formik.handleSubmit}>\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full px-3\">\n            <label className=\"label\">Disability - Color blind</label>\n\n            <ColorBlind />\n          </div>\n        </div>\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full px-3\">\n            <label className=\"label\">Disability - Dyslexic</label>\n\n            <Dyslexic />\n          </div>\n        </div>\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full px-3\">\n            <label className=\"label\">Vis Literacy</label>\n\n            <VisLiteracy />\n          </div>\n        </div>\n\n        <div className=\"font-bold\">Based on chart types:</div>\n        <hr className=\"my-2\" />\n        <Checkbox\n          checked={formik.values.stacked}\n          name=\"stacked\"\n          label=\"Stacked bars when possible\"\n          formik={formik}\n        />\n\n        <hr className=\"my-2\" />\n        <Checkbox\n          checked={formik.values.multiline}\n          name=\"multiline\"\n          label=\"Multiline charts\"\n          formik={formik}\n        />\n\n        <hr className=\"my-2\" />\n        <Checkbox\n          checked={formik.values.rightAxis}\n          name=\"rightAxis\"\n          label=\"Line charts with right axis\"\n          formik={formik}\n        />\n\n        <hr className=\"my-2\" />\n        <Input name=\"binValues\" label=\"Bin quantitative columns higher than\" formik={formik} />\n\n        <hr className=\"my-2\" />\n        <Input\n          name=\"clampStrings\"\n          label=\"Clamp string columns with more distinct values than\"\n          formik={formik}\n        />\n\n        <div className=\"font-bold\">Based on chart types:</div>\n        <hr className=\"my-2\" />\n        {chartTypes.map((_, index) => (\n          <div className=\"flex -mx-4 mb-3\" key={index}>\n            <div className=\"px-4 w-1/3\">\n              <Input\n                name={`chartTypes.${index}.typeX`}\n                label=\"Type X\"\n                disabled={true}\n                formik={formik}\n              />\n            </div>\n            <div className=\"px-4 w-1/3\">\n              <Input\n                name={`chartTypes.${index}.typeY`}\n                label=\"Type Y\"\n                disabled={true}\n                formik={formik}\n              />\n            </div>\n            <div className=\"px-4 w-1/3\">\n              <Select\n                name={`chartTypes.${index}.chart`}\n                label=\"Chart Type\"\n                options={[\n                  { value: 'AUTO', label: 'Auto' },\n                  { value: 'LINE', label: 'Line' },\n                  { value: 'BAR', label: 'Bar' },\n                ]}\n                formik={formik}\n              />\n            </div>\n          </div>\n        ))}\n\n        <div className=\"flex justify-end\">\n          <button type=\"button\" className=\"button mr-2\" onClick={backToHome}>\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"button button-primary\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nimport { Home } from './pages/Home';\nimport { DatasetColumns } from './pages/DatasetColumns';\nimport { Dashboard } from './pages/Dashboard';\nimport { UserAdd } from './pages/UserAdd';\nimport { UserView } from './pages/UserView';\nimport { UploadFileForm } from './components/UploadFileForm';\nimport Header from './components/Header';\nimport { Preferences } from './pages/Preferences';\nimport { UserContext } from './contexts/user.context';\nimport { useContext } from 'react';\n\nlibrary.add(fas);\n\nfunction App(): JSX.Element {\n  const { disability } = useContext(UserContext);\n\n  return (\n    <div className={`App ${disability?.includes('dyslexic') ? 'dyslexic-font' : ''}`}>\n      <BrowserRouter>\n        <Header />\n        <div>\n          <div className=\"container mx-auto pt-4 mb-8\">\n            <Switch>\n              <Route exact path=\"/user/add\">\n                <UserAdd />\n              </Route>\n              <Route exact path=\"/dataset/add\">\n                <UploadFileForm />\n              </Route>\n              <Route exact path=\"/dashboard/add/:id\">\n                <DatasetColumns action=\"add\" />\n              </Route>\n              <Route exact path=\"/dashboard/:id/edit\">\n                <DatasetColumns action=\"edit\" />\n              </Route>\n              <Route exact path=\"/dashboard/view/:id\">\n                <Dashboard />\n              </Route>\n              <Route exact path=\"/user/view/:id\">\n                <UserView />\n              </Route>\n              <Route exact path=\"/preferences\">\n                <Preferences />\n              </Route>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './tailwind.css';\n\nimport App from './App';\nimport { UserProvider } from './contexts/user.context';\n\nReactDOM.render(\n  <StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}