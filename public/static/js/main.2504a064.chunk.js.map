{"version":3,"sources":["utils/constants.ts","services/user.service.ts","utils/functions.ts","components/ui/Alert.tsx","components/ui/Loading.tsx","components/ui/Card.tsx","components/ui/Badge.tsx","components/UsersList.tsx","contexts/user.context.tsx","pages/Home.tsx","services/dataset.service.ts","services/dashboard.service.ts","components/form/Input.tsx","components/form/Select.tsx","pages/DatasetColumns.tsx","charts/VerticalBarChart.tsx","services/dashboard-recommendation.service.ts","charts/LineChart.tsx","charts/Heatmap.tsx","charts/HorizontalBarChart.tsx","charts/StackedHorizontalBarChart.tsx","charts/MultipleLineChart.tsx","charts/MapChart.tsx","charts/Mapbox.tsx","charts/GroupedHorizontalBarChart.tsx","pages/Dashboard.tsx","hooks/useButtonGroup.tsx","pages/UserAdd.tsx","components/DashboardList.tsx","components/DatasetsList.tsx","pages/UserView.tsx","components/UploadFileForm.tsx","components/Header.tsx","components/form/Checkbox.tsx","pages/Preferences.tsx","App.tsx","index.tsx"],"names":["API_URL","a","ky","get","json","getById","id","user","post","remove","delete","preferences","applyClass","condition","className","generateId","Math","random","toString","substr","capitalize","value","endsWith","slice","replaceAll","split","map","s","flat","charAt","toUpperCase","join","replace","createColorScale","disability","keys","d3","includes","length","Alert","title","message","role","icon","Loading","loading","spin","size","Card","children","Badge","UsersList","useState","users","setUsers","isLoading","setIsLoading","load","getAll","then","useEffect","onDeleteHandler","name","visLiteracy","formatRelative","Date","updatedDate","createdDate","to","type","onClick","UserContext","createContext","undefined","UserProvider","props","localStorage","getItem","setUser","setDisability","Provider","signIn","setItem","signOut","removeItem","Home","history","useHistory","useContext","uploadDataset","userId","file","formData","FormData","append","body","save","fields","update","put","Input","label","placeholder","disabled","formik","htmlFor","getFieldProps","Select","options","toLowerCase","option","isDisabled","DatasetColumns","action","setLoading","purpose","values","setValues","setName","loadingCount","setLoadingCount","useParams","response","columns","formFields","indexes","moreThanOneMeasure","filter","column","DatasetColumnRole","MEASURE","forEach","field","index","push","originalName","removed","aggregate","DatasetSchemaAggregateFunction","Sum","None","originalname","setTimeout","dashboardService","userDatasets","goalType","goalPurpose","backToHome","enableReinitialize","initialValues","onSubmit","f","i","datasetId","goal","colums","setFieldValue","item","elementId","svgId","VerticalBarChart","margin","svg","attr","width","node","getBoundingClientRect","groupHover","groupData","groupAxis","data","d","valueMax","xScale","domain","paddingInner","paddingOuter","range","yScale","colorScale","xAxis","yAxis","on","event","x","scale","eachBand","step","floor","max","min","scaleBandInvert","find","selectAll","scaleMargin","bandwidth","enter","call","LineChart","height","extent","lineGenerator","defined","isNaN","y","datum","Heatmap","xAcessor","dayOfWeeks","Array","from","e","format","addDays","startOfWeek","formatWeeek","weeks","Set","padding","getDay","parse","delta","differenceInDays","tickValues","ceil","HorizontalBarChart","top","bottom","left","right","maxTextWidth","text","each","thisWidth","this","getComputedTextLength","StackedHorizontalBarChart","Number","MIN_SAFE_INTEGER","sort","b","name2","localeCompare","reduce","prev","curr","p","total","start","end","reverse","colors","v","MultipleLineChart","valueMaxLeft","Object","k","axis","valueMaxRight","hasRightAxis","some","y2Scale","y2Axis","key","leftLineGenerator","rightLineGenerator","MapChart","geofile","shape","projection","fitExtent","path","style","trim","properties","accessor","MapBox","mapContainer","useRef","current","latMin","MAX_VALUE","latMax","MIN_VALUE","lngMin","lngMax","features","latitude","longitude","geometry","coordinates","mapbox","Map","container","zoom","bounds","addSource","cluster","clusterMaxZoom","clusterRadius","addLayer","source","paint","layout","ref","GroupedHorizontalBarChart","groupedKeys","firstGroup","convert","accessToken","formatter","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","Dashboard","dashboard","setDashboard","chartData","setChartData","page","setPage","setD","getSpec","cData","pages","clampStrings","owner","charts","multipleLines","fieldX","specs","spec","userDimension","fieldY","userMeasure","encoding","fieldColor","color","Mean","trimValues","userSecondDimension","mark","geoFile","dashboardPage","chart","dd","VegaLite","useButtonGroup","defaultValue","state","setState","UserAdd","VisLiteracy","colorBlind","ColorBlind","dyslexic","Dyslexic","useFormik","Boolean","handleSubmit","DashboardList","datasets","setDatasets","countColumns","dataset","count","DIMENSION","DatasetsList","UserView","userData","UploadFileForm","onChangeHandler","persist","target","files","console","log","onChange","withRouter","Checkbox","checked","types","chartTypes","typeX","typeY","Preferences","setVisLiteracy","setColorBlind","setDyslexic","stacked","multiline","rightAxis","binValues","savePreferences","findIndex","chartType","_","library","add","fas","App","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2504a064.chunk.js","sourcesContent":["export const API_URL = '';\n","import ky from 'ky';\n\nimport { UserDTO, UserInterface } from '@junoapp/common';\nimport { API_URL } from '../utils/constants';\n\nexport async function getAll(): Promise<UserInterface[]> {\n  return ky.get(`${API_URL}/api/user`).json();\n}\n\nexport async function getById(id: number): Promise<UserInterface> {\n  return ky.get(`${API_URL}/api/user/${id}`).json();\n}\n\nexport async function save(user: UserDTO): Promise<UserInterface> {\n  return ky\n    .post(`${API_URL}/api/user`, {\n      json: user,\n    })\n    .json();\n}\n\nexport async function remove(id: number): Promise<Response> {\n  return ky.delete(`${API_URL}/api/user/${id}`);\n}\n\nexport async function savePreferences(id: number, preferences: any): Promise<Response> {\n  return ky.post(`${API_URL}/api/user/preferences/${id}`, {\n    json: preferences,\n  });\n}\n","import * as d3 from 'd3';\n\nexport function applyClass(condition: boolean | string | undefined, className?: string) {\n  return className ? (condition ? className : '') : condition ? condition : '';\n}\n\nexport function generateId(): string {\n  return 'juno-' + Math.random().toString(36).substr(2, 9);\n}\n\nexport function generateId2(): string {\n  return 'j' + Math.random().toString(36).substr(2, 9);\n}\n\nexport function scaleBandInvert(scale: d3.ScaleBand<string>) {\n  var domain = scale.domain();\n  var paddingOuter = scale(domain[0]) || 0;\n  var eachBand = scale.step();\n\n  return function (value: number) {\n    var index = Math.floor((value - paddingOuter) / eachBand);\n    return domain[Math.max(0, Math.min(index, domain.length - 1))];\n  };\n}\n\nexport function capitalize(value: string) {\n  if (value.endsWith('.csv')) {\n    value = value.slice(0, -4);\n  }\n\n  value = value.replaceAll('_', ' ');\n\n  return value\n    .split(' ')\n    .map((s) => s.split(/(?=[A-Z])/))\n    .flat()\n    .map((s) => s.charAt(0).toUpperCase() + s.slice(1))\n    .join(' ')\n    .replace(/\\s+/g, ' ');\n}\n\nexport function createColorScale(\n  disability: string,\n  keys: string[]\n): d3.ScaleOrdinal<string, string> {\n  return d3.scaleOrdinal(\n    disability?.includes('colorBlind')\n      ? keys.length > 4\n        ? ['#3575B1']\n        : ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c']\n      : keys.length > 10\n      ? ['#3575B1']\n      : d3.schemeCategory10\n  );\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { applyClass } from '../../utils/functions';\n\nexport function Alert({\n  title,\n  message,\n  className,\n}: {\n  title: string;\n  message: string;\n  className?: string;\n}) {\n  return (\n    <div\n      className={`bg-blue-100 border-blue-500 rounded-b text-blue-900 px-4 py-3 shadow-md w-full h-fit ${applyClass(\n        className\n      )}`}\n      role=\"alert\"\n    >\n      <div className=\"flex\">\n        <div className=\"py-1 h-6 w-6 text-blue-500 mr-4\">\n          <FontAwesomeIcon icon=\"info-circle\" />\n        </div>\n        <div>\n          <p className=\"font-bold\">{title}</p>\n          <p className=\"text-sm\">{message}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function Loading({ loading }: { loading: boolean }): JSX.Element {\n  return loading ? (\n    <div className=\"absolute top-1/2 left-1/2 -mt-4 -ml-4 h-40\">\n      <FontAwesomeIcon icon=\"circle-notch\" spin size=\"2x\" className=\"text-orange-500\" />\n    </div>\n  ) : (\n    <></>\n  );\n}\n","import { applyClass } from '../../utils/functions';\n\nexport function Card({\n  title,\n  className,\n  children,\n}: {\n  title?: string;\n  className?: string;\n  children: React.ReactNode;\n}): JSX.Element {\n  return (\n    <div\n      className={`w-full h-full rounded overflow-hidden shadow bg-white ${applyClass(className)}`}\n    >\n      {title && (\n        <div className=\"px-6 pt-4\">\n          <div className=\"font-bold text-xl mb-2 break-words\">{title}</div>\n        </div>\n      )}\n      <div className=\"px-6 py-4\">{children}</div>\n    </div>\n  );\n}\n","export function Badge({ children }: { children: React.ReactNode }): JSX.Element {\n  return (\n    <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\n      {children}\n    </span>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { formatRelative } from 'date-fns';\nimport { Link } from 'react-router-dom';\n\nimport { getAll, remove } from '../services/user.service';\nimport { UserInterface } from '@junoapp/common';\nimport { Alert } from './ui/Alert';\nimport { Loading } from './ui/Loading';\nimport { Card } from './ui/Card';\nimport { Badge } from './ui/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function UsersList(): JSX.Element {\n  const [users, setUsers] = useState<UserInterface[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const load = () => {\n    setIsLoading(true);\n\n    getAll().then((users) => {\n      setUsers(users);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const onDeleteHandler = async (id: number) => {\n    setIsLoading(true);\n    await remove(id);\n    load();\n  };\n\n  return (\n    <div className=\"relative flex flex-wrap -mx-4 min-h\">\n      <Loading loading={isLoading} />\n\n      {!isLoading && users.length === 0 && (\n        <Alert\n          title=\"No user added\"\n          message=\"Add some user to start a new dashboard.\"\n          className=\"mx-4\"\n        />\n      )}\n\n      {!isLoading &&\n        users.length > 0 &&\n        users.map((user: UserInterface) => (\n          <div key={user['id']} className=\"w-1/3 px-4 mb-4\">\n            <Card title={user.name}>\n              <div className=\"flex flex-col items-start\">\n                <Badge>VisLiteracy: {user.visLiteracy}</Badge>\n                {user.disability && <Badge>Disability: {user.disability}</Badge>}\n\n                <span className=\"text-gray-600 text-xs mb-2\">\n                  Updated {formatRelative(new Date(user.updatedDate), new Date())}\n                  <br />\n                  Created {formatRelative(new Date(user.createdDate), new Date())}\n                </span>\n              </div>\n              <div className=\"flex\">\n                <Link\n                  to={`user/view/${user.id}`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"eye\" />\n                  Login\n                </Link>\n                <button\n                  type=\"button\"\n                  className=\"button button-danger button-small\"\n                  onClick={() => onDeleteHandler(user.id)}\n                >\n                  <FontAwesomeIcon icon=\"trash\" />\n                  Delete\n                </button>\n              </div>\n            </Card>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { createContext, useState } from 'react';\n\nexport interface UserContextData {\n  user: string;\n  disability: string;\n  signIn(user: string, disability: string): void;\n  signOut(): void;\n}\n\nexport const UserContext = createContext<UserContextData | undefined>(undefined);\n\nexport function UserProvider(props: { children: JSX.Element }): JSX.Element {\n  const [user, setUser] = useState<string>(localStorage.getItem('user'));\n  const [disability, setDisability] = useState<string>(localStorage.getItem('disability'));\n\n  function signIn(user: string, disability: string) {\n    localStorage.setItem('user', user);\n    localStorage.setItem('disability', disability);\n\n    setUser(user);\n    setDisability(disability);\n  }\n\n  function signOut() {\n    localStorage.removeItem('user');\n    localStorage.removeItem('disability');\n    setUser(undefined);\n    setDisability(undefined);\n  }\n\n  return (\n    <UserContext.Provider value={{ user, disability, signIn, signOut }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n","import { Link, useHistory } from 'react-router-dom';\n\nimport { UsersList } from '../components/UsersList';\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/user.context';\n\nexport function Home(): JSX.Element {\n  const history = useHistory();\n  const { user } = useContext(UserContext);\n\n  if (user) {\n    history.replace(`/user/view/${user}`);\n  }\n\n  return (\n    <div>\n      <div className=\"flex\">\n        <Link to={`/user/add`} className=\"button button-primary\">\n          Add new user\n        </Link>\n      </div>\n\n      <div className=\"mt-5\">\n        <UsersList />\n      </div>\n    </div>\n  );\n}\n","import ky from 'ky';\n\nimport { DashboardUpdate, DatasetInterface } from '@junoapp/common';\nimport { API_URL } from '../utils/constants';\n\nexport async function getAll(): Promise<DatasetInterface[]> {\n  return ky.get(`${API_URL}/api/dataset`).json();\n}\n\nexport async function getById(id: number): Promise<DatasetInterface> {\n  return ky.get(`${API_URL}/api/dataset/${id}`).json();\n}\n\nexport async function getSpec(datasetId: number): Promise<any[]> {\n  return ky.get(`${API_URL}/api/dashboard/${datasetId}/spec`).json();\n}\n\nexport async function uploadDataset(userId: string, file: File): Promise<DatasetInterface> {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('user', userId);\n\n  return ky\n    .post(`${API_URL}/api/dataset/upload`, {\n      body: formData,\n    })\n    .json();\n}\n\nexport async function updateColumns(id: number, fields: DashboardUpdate): Promise<Response> {\n  return ky.post(`${API_URL}/api/dashboard/${id}`, {\n    json: fields,\n  });\n}\n\nexport async function remove(id: number): Promise<Response> {\n  return ky.delete(`${API_URL}/api/dataset/${id}`);\n}\n","import ky from 'ky';\n\nimport {\n  DashboardInsert,\n  DashboardInterface,\n  DashboardUpdate,\n  DatasetInterface,\n} from '@junoapp/common';\nimport { API_URL } from '../utils/constants';\n\nexport async function getAll(userId: number): Promise<DashboardInterface[]> {\n  return ky.get(`${API_URL}/api/dashboard?user=${userId}`).json();\n}\n\nexport async function getById(id: number): Promise<DashboardInterface> {\n  return ky.get(`${API_URL}/api/dashboard/${id}`).json();\n}\n\nexport async function getSpec(datasetId: number): Promise<any[]> {\n  return ky.get(`${API_URL}/api/dashboard/${datasetId}/spec`).json();\n}\n\nexport async function uploadDataset(userId: string, file: File): Promise<DatasetInterface> {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('user', userId);\n\n  return ky\n    .post(`${API_URL}/api/dashboard/upload`, {\n      body: formData,\n    })\n    .json();\n}\n\nexport async function save(fields: DashboardInsert): Promise<Response> {\n  return ky.post(`${API_URL}/api/dashboard`, {\n    json: fields,\n  });\n}\n\nexport async function update(fields: DashboardUpdate): Promise<Response> {\n  return ky.put(`${API_URL}/api/dashboard`, {\n    json: fields,\n  });\n}\n\nexport async function remove(id: number): Promise<Response> {\n  return ky.delete(`${API_URL}/api/dashboard/${id}`);\n}\n","import { FieldInputProps } from 'formik';\n\nexport function Input({\n  name,\n  label,\n  type,\n  placeholder,\n  disabled,\n  formik,\n}: {\n  name: string;\n  label: string;\n  type?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  formik: { getFieldProps: (name: string) => FieldInputProps<any> };\n}): JSX.Element {\n  return (\n    <div>\n      <label className=\"label\" htmlFor={name}>\n        {label}\n      </label>\n      <input\n        className=\"input\"\n        id={name}\n        type={type || 'text'}\n        placeholder={placeholder || ''}\n        disabled={disabled}\n        {...formik.getFieldProps(name)}\n      />\n    </div>\n  );\n}\n","import { FieldInputProps } from 'formik';\nimport { DropdownOption } from '../../models/dropdown-option';\n\nexport function Select({\n  name,\n  label,\n  options,\n  formik,\n  disabled,\n}: {\n  name: string;\n  label: string;\n  options: Array<DropdownOption>;\n  formik: { getFieldProps: (name: string) => FieldInputProps<any> };\n  disabled?: boolean;\n}): JSX.Element {\n  return (\n    <div>\n      <label className=\"label\" htmlFor={name}>\n        {label}\n      </label>\n      <div className=\"relative\">\n        <select className=\"select\" id={name} {...formik.getFieldProps(name)} disabled={disabled}>\n          <option value=\"\">Select a {label.toLowerCase()}</option>\n          {options.map((option) => (\n            <option key={option.value} value={option.value} disabled={option.isDisabled || false}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport { Formik, Form } from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { getById } from '../services/dataset.service';\nimport * as dashboardService from '../services/dashboard.service';\nimport { Loading } from '../components/ui/Loading';\nimport { Card } from '../components/ui/Card';\nimport { Input } from '../components/form/Input';\nimport { Select } from '../components/form/Select';\nimport { UploadInfoField } from '../models/upload-info';\nimport { DropdownOption } from '../models/dropdown-option';\nimport { DashboardGoal, DashboardPurpose, DatasetColumnRole } from '@junoapp/common';\nimport { UserContext } from '../contexts/user.context';\nimport { DatasetSchemaAggregateFunction } from '@junoapp/common';\nimport { capitalize } from '../utils/functions';\n\nexport function DatasetColumns({ action }: { action: 'add' | 'edit' }): JSX.Element {\n  const [isLoading, setLoading] = useState(false);\n  const [values, setValues] = useState<{\n    name: string;\n    type: string;\n    purpose: string;\n    fields: Array<UploadInfoField>;\n  }>({ name: '', type: '', purpose: '', fields: [] });\n\n  const [name, setName] = useState<string | undefined>(undefined);\n  const [loadingCount, setLoadingCount] = useState(0);\n\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    setLoading(true);\n    if (action === 'add') {\n      getById(+id).then((response) => {\n        if (response.columns.length === 0) {\n          setTimeout(() => {\n            setLoadingCount(loadingCount + 1);\n          }, 1000);\n          return;\n        }\n\n        const formFields: UploadInfoField[] = [];\n        const indexes: DropdownOption[] = [];\n\n        const moreThanOneMeasure =\n          response.columns.filter((column) => column.role === DatasetColumnRole.MEASURE).length > 1;\n\n        response.columns.forEach((field, index) => {\n          formFields.push({\n            id: field.id,\n            originalName: field.name,\n            name: capitalize(field.name),\n            role: field.role,\n            index,\n            removed:\n              moreThanOneMeasure &&\n              field.role === DatasetColumnRole.MEASURE &&\n              field.name.toLowerCase() === 'count',\n            type: field.type,\n            aggregate:\n              field.role === DatasetColumnRole.MEASURE\n                ? DatasetSchemaAggregateFunction.Sum\n                : DatasetSchemaAggregateFunction.None,\n          });\n\n          indexes.push({\n            label: index.toString(),\n            value: index.toString(),\n            isDisabled: false,\n          });\n        });\n\n        setName(capitalize(response.originalname));\n        setLoading(false);\n        setValues({\n          name: capitalize(response.originalname),\n          type: '',\n          purpose: '',\n          fields: formFields,\n        });\n      });\n    } else {\n      dashboardService.getById(+id).then((response) => {\n        const formFields: UploadInfoField[] = [];\n        const indexes: DropdownOption[] = [];\n\n        response.userDatasets[0].columns.forEach((field, index) => {\n          formFields.push({\n            id: field.id,\n            originalName: field.column.name,\n            name: field.name,\n            role: field.role,\n            index,\n            removed: field.removed,\n            type: field.column.type,\n            aggregate: field.aggregate,\n          });\n\n          indexes.push({\n            label: index.toString(),\n            value: index.toString(),\n            isDisabled: false,\n          });\n        });\n\n        setName(response.name);\n        setLoading(false);\n        setValues({\n          name: response.name,\n          type: response.goalType,\n          purpose: response.goalPurpose,\n          fields: formFields,\n        });\n      });\n    }\n  }, [id, action, loadingCount]);\n\n  const backToHome = () => {\n    history.replace(`/user/view/${user}`);\n  };\n\n  return (\n    <div className=\"relative\">\n      <Card className=\"min-h\" title={name}>\n        <Loading loading={isLoading} />\n\n        {!isLoading && (\n          <div className=\"mt-4\">\n            <Formik\n              enableReinitialize={true}\n              initialValues={values}\n              onSubmit={async (values) => {\n                const fields = values.fields.map((f, i) => ({\n                  ...f,\n                  index: i,\n                  role: f.role as DatasetColumnRole,\n                }));\n\n                setLoading(true);\n                if (action === 'add') {\n                  await dashboardService.save({\n                    datasetId: +id,\n                    name: values.name,\n                    user: +user,\n                    goal: values.type as DashboardGoal,\n                    purpose: values.purpose as DashboardPurpose,\n                    colums: fields,\n                  });\n                } else {\n                  await dashboardService.update({\n                    id: +id,\n                    name: values.name,\n                    user: +user,\n                    goal: values.type as DashboardGoal,\n                    purpose: values.purpose as DashboardPurpose,\n                    colums: fields,\n                  });\n                }\n                backToHome();\n              }}\n            >\n              {({ getFieldProps, values, setFieldValue }) => (\n                <Form>\n                  <div className=\"flex -mx-4 bg-white\">\n                    <div className=\"px-4 w-1/3\">\n                      <Input name={`name`} label={`Name`} formik={{ getFieldProps }} />\n                    </div>\n                    <div className=\"px-4 w-1/3\">\n                      <Select\n                        name={`type`}\n                        label=\"Goal Type\"\n                        options={[\n                          { value: 'DECISION_MAKING', label: 'Decision Making' },\n                          { value: 'AWARENESS', label: 'Awareness' },\n                          { value: 'MOTIVATIONAL_LEARNING', label: 'Motivational Learning' },\n                          { value: 'OTHER', label: 'Other' },\n                        ]}\n                        formik={{ getFieldProps }}\n                      />\n                    </div>\n                    <div className=\"px-4 w-1/3\">\n                      <Select\n                        name={`purpose`}\n                        label=\"Goal Purpose\"\n                        options={[\n                          { value: 'STRATEGIC', label: 'Strategic' },\n                          { value: 'OPERATIONAL', label: 'Operational' },\n                          { value: 'ORGANIZATIONAL', label: 'Organizational' },\n                          { value: 'LEARNING', label: 'Learning' },\n                        ]}\n                        formik={{ getFieldProps }}\n                      />\n                    </div>\n                  </div>\n\n                  <hr className=\"mt-2 mb-4\" />\n\n                  <div>\n                    {values.fields.length > 0 &&\n                      values.fields.map((item, index) => (\n                        <div className=\"flex -mx-4 bg-white\">\n                          {/* <div className=\"px-4 flex items-center\">\n                            <FontAwesomeIcon icon=\"bars\" />\n                          </div> */}\n                          <div className=\"px-4 w-2/5\">\n                            <Input\n                              name={`fields.${index}.name`}\n                              label={`Name`}\n                              formik={{ getFieldProps }}\n                            />\n                          </div>\n                          <div className=\"px-4 w-2/5\">\n                            <Input\n                              name={`fields.${index}.type`}\n                              label={`Type`}\n                              formik={{ getFieldProps }}\n                              disabled\n                            />\n                          </div>\n                          <div className=\"px-4 w-2/5\">\n                            <Select\n                              name={`fields.${index}.role`}\n                              label=\"Type\"\n                              options={[\n                                { value: 'measure', label: 'Measure' },\n                                { value: 'dimension', label: 'Dimension' },\n                              ]}\n                              formik={{ getFieldProps }}\n                            />\n                          </div>\n                          <div className=\"px-4 w-2/5\">\n                            <Select\n                              name={`fields.${index}.aggregate`}\n                              label=\"Aggregate\"\n                              options={[\n                                { value: 'NONE', label: 'None' },\n                                { value: 'MIN', label: 'Min' },\n                                { value: 'MEAN', label: 'Mean' },\n                                { value: 'SUM', label: 'Sum' },\n                                { value: 'BIN', label: 'Bin' },\n                                { value: 'MAX', label: 'Max' },\n                                { value: 'MEDIAN', label: 'Median' },\n                              ]}\n                              formik={{ getFieldProps }}\n                              disabled={\n                                values.fields[index].role === 'dimension' ||\n                                values.fields[index].originalName === 'count'\n                              }\n                            />\n                          </div>\n                          <div className=\"px-4 flex items-center\">\n                            <button\n                              type=\"button\"\n                              className={`button ${\n                                item.removed ? 'button-success' : 'button-danger'\n                              }`}\n                              onClick={() =>\n                                setFieldValue(\n                                  `fields.${index}.removed`,\n                                  !values.fields[index].removed\n                                )\n                              }\n                            >\n                              <FontAwesomeIcon icon={item.removed ? 'plus' : 'times'} />\n                            </button>\n                          </div>\n                        </div>\n                      ))}\n                  </div>\n                  <div className=\"flex justify-end\">\n                    <button type=\"button\" className=\"button mr-2\" onClick={backToHome}>\n                      Cancel\n                    </button>\n                    <button type=\"submit\" className=\"button button-primary\">\n                      Submit\n                    </button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { createColorScale, generateId, scaleBandInvert } from '../utils/functions';\nimport { UserContext } from '../contexts/user.context';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function VerticalBarChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n  const { disability } = useContext(UserContext);\n\n  useEffect(() => {\n    const margin = {\n      top: 10,\n      bottom: 30,\n      left: 40,\n      right: 10,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupHover = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetChartSpecValues) => d.name;\n    const yAcessor = (d: DatasetChartSpecValues) => d.value;\n\n    const keys = props.data.map(xAcessor);\n    const valueMax = d3.max(props.data, yAcessor);\n\n    const xScale = d3\n      .scaleBand()\n      .domain(keys)\n      .paddingInner(0.1)\n      .paddingOuter(0.1)\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([height - margin.bottom, margin.top]);\n\n    const colorScale = createColorScale(disability, keys);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    svg\n      .on('mousemove', function (event: any) {\n        const [x] = (d3 as any).pointer(event);\n\n        const name = scaleBandInvert(xScale)(x);\n\n        const d = props.data.find((d) => d.name === name);\n\n        groupHover.selectAll('.hover-rect').remove();\n        if (d) {\n          const scaleMargin = xScale.step() * xScale.paddingInner();\n\n          groupHover\n            .append('rect')\n            .attr('class', 'hover-rect')\n            .attr('x', (xScale(d.name) as number) - scaleMargin / 2)\n            .attr('y', yScale(valueMax))\n            .attr('width', xScale.bandwidth() + scaleMargin)\n            .attr('height', yScale(0) - margin.top)\n            .attr('fill', '#ccc');\n        }\n      })\n      .on('mouseleave', () => {\n        groupHover.selectAll('.hover-rect').remove();\n      });\n\n    groupData\n      .selectAll('rect.data-item')\n      .data(props.data)\n      .enter()\n      .append('rect')\n      .attr('class', 'data-item')\n      .attr('x', (d) => xScale(d.name) as number)\n      .attr('y', (d) => yScale(d.value))\n      .attr('width', xScale.bandwidth())\n      .attr('height', (d) => yScale(0) - yScale(d.value))\n      .attr('fill', (d) => colorScale(d.name))\n      .attr('pointer-events', 'none');\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props, disability]);\n\n  return (\n    <div>\n      <h1>{props.name}</h1>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { DashboardRecommendation } from '@junoapp/common';\nimport ky from 'ky';\nimport { API_URL } from '../utils/constants';\n\nexport async function getSpec(datasetId: number): Promise<DashboardRecommendation> {\n  return ky.get(`${API_URL}/api/dashboard-recommendation/${datasetId}/spec`).json();\n}\n","import { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { generateId } from '../utils/functions';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function LineChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n\n  useEffect(() => {\n    const margin = {\n      top: 10,\n      bottom: 30,\n      left: 80,\n      right: 80,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetChartSpecValues) => new Date(d.name);\n    const yAcessor = (d: DatasetChartSpecValues) => d.value;\n\n    const valueMax = d3.max(props.data, yAcessor);\n\n    const extent = d3.extent(props.data, xAcessor);\n\n    const xScale = d3\n      .scaleTime()\n      .domain(extent)\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    const lineGenerator = d3\n      .line<DatasetChartSpecValues>()\n      .defined((d) => !isNaN(d.value))\n      .x((d) => xScale(new Date(d.name)))\n      .y((d) => yScale(d.value));\n\n    groupData\n      .append('path')\n      .datum(props.data)\n      .attr('d', lineGenerator)\n      .attr('width', width)\n      .attr('height', height)\n      .attr('fill', 'none')\n      .attr('stroke', 'steelblue')\n      .attr('stroke-width', 1.5)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round');\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props]);\n\n  return (\n    <div>\n      <h1>{props.name}</h1>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { generateId } from '../utils/functions';\nimport { getDay, format, addDays, startOfWeek, parse, differenceInDays } from 'date-fns';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function Heatmap(props: { name: string; data: Array<DatasetChartSpecValues> }): JSX.Element {\n  const [id] = useState<string>(generateId());\n\n  useEffect(() => {\n    const margin = {\n      top: 10,\n      bottom: 30,\n      left: 80,\n      right: 80,\n    };\n\n    const height = 250;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetChartSpecValues) => new Date(d.name);\n\n    const max = d3.max(props.data, (d) => d.value);\n\n    const dayOfWeeks = Array.from(Array(7)).map((e, i) =>\n      format(addDays(startOfWeek(new Date()), i), 'E')\n    );\n\n    const formatWeeek = (d: DatasetChartSpecValues) =>\n      format(startOfWeek(xAcessor(d)), 'dd/MM/yyyy');\n\n    const weeks = [...new Set(props.data.map((d) => formatWeeek(d)))];\n\n    const xScale = d3\n      .scaleBand()\n      .domain(weeks)\n      .range([margin.left, width - margin.right])\n      .padding(0.1);\n\n    const yScale = d3\n      .scaleBand()\n      .range([height - margin.bottom, margin.top])\n      .domain(dayOfWeeks)\n      .padding(0.1);\n\n    groupData\n      .selectAll('rect')\n      .data(props.data.filter((d) => !isNaN(d.value)))\n      .enter()\n      .append('rect')\n      .attr('x', (d) => xScale(formatWeeek(d)))\n      .attr('y', (d) => yScale(dayOfWeeks[getDay(xAcessor(d))]))\n      .attr('width', xScale.bandwidth())\n      .attr('height', yScale.bandwidth())\n      .attr('fill', (d) => d3.interpolateBlues(d.value / max));\n\n    const extent = d3.extent(props.data, (d) => parse(d.name, 'yyyy/MM/dd', new Date()));\n    const delta = differenceInDays(extent[1], extent[0]);\n\n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickValues(xScale.domain().filter((d, i) => !(i % Math.ceil(delta * 0.0065))));\n    const yAxis = d3.axisLeft(yScale);\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props]);\n\n  return (\n    <div>\n      <h1>{props.name}</h1>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { createColorScale, generateId } from '../utils/functions';\nimport { UserContext } from '../contexts/user.context';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function HorizontalBarChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n  const { disability } = useContext(UserContext);\n\n  useEffect(() => {\n    const margin = {\n      top: 10,\n      bottom: 30,\n      left: 0,\n      right: 10,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetChartSpecValues) => d.name;\n    const yAcessor = (d: DatasetChartSpecValues) => d.value;\n\n    const keys = props.data.map(xAcessor);\n    const valueMax = d3.max(props.data, yAcessor);\n\n    var maxTextWidth = 0;\n\n    svg\n      .append('g')\n      .selectAll('.dummyText')\n      .data(keys)\n      .enter()\n      .append('text')\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', '14px')\n      .text((d) => d)\n      .each(function () {\n        const thisWidth = this.getComputedTextLength() + 10;\n        if (thisWidth > maxTextWidth) {\n          maxTextWidth = thisWidth;\n        }\n\n        this.remove();\n      });\n\n    margin.left = maxTextWidth;\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleBand()\n      .domain(keys)\n      .paddingInner(0.1)\n      .paddingOuter(0.1)\n      .range([margin.top, height - margin.bottom]);\n\n    const colorScale = createColorScale(disability, keys);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    groupData\n      .selectAll('rect.data-item')\n      .data(props.data)\n      .enter()\n      .append('rect')\n      .attr('class', 'data-item')\n      .attr('x', xScale(0))\n      .attr('y', (d) => yScale(d.name))\n      .attr('width', (d) => xScale(d.value) - xScale(0))\n      .attr('height', yScale.bandwidth())\n      .attr('fill', (d) => colorScale(d.name))\n      .attr('pointer-events', 'none');\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis\n      .append('g')\n      .call(yAxis)\n      .attr('transform', `translate(${margin.left}, 0)`)\n      .attr('class', 'y-axis');\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props, disability]);\n\n  return (\n    <div>\n      <h1>{props.name}</h1>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { createColorScale, generateId } from '../utils/functions';\nimport { UserContext } from '../contexts/user.context';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function StackedHorizontalBarChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n  const { disability } = useContext(UserContext);\n\n  useEffect(() => {\n    const margin = {\n      top: 10,\n      bottom: 30,\n      left: 100,\n      right: 10,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    type StackedData = {\n      name: string;\n      total: number;\n      values: Array<{\n        name: string;\n        end: number;\n        start: number;\n      }>;\n    };\n\n    let valueMax = Number.MIN_SAFE_INTEGER;\n\n    props.data.sort((a, b) => a.name2.localeCompare(b.name2));\n\n    const data: Array<StackedData> = props.data.reduce(\n      (prev: StackedData[], curr: DatasetChartSpecValues) => {\n        let item = prev.find((p) => p.name === curr.name);\n\n        if (!item) {\n          item = {\n            name: curr.name,\n            total: 0,\n            values: [],\n          };\n\n          prev.push(item);\n        }\n\n        item.values.push({\n          name: curr.name2,\n          start: item.total,\n          end: item.total + curr.value,\n        });\n\n        item.total += curr.value;\n\n        if (item.total >= valueMax) {\n          valueMax = item.total;\n        }\n\n        return prev;\n      },\n      []\n    );\n\n    const keys = data.map((d) => d.name).reverse();\n    const colors = [...new Set(data.map((d) => d.values.map((v) => v.name)).flat())];\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleBand()\n      .domain(keys)\n      .paddingInner(0.1)\n      .paddingOuter(0.1)\n      .range([height - margin.bottom, margin.top]);\n\n    const colorScale = createColorScale(disability, colors);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    groupData\n      .selectAll('g.group-item')\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('class', 'group-item')\n      .attr('transform', (d) => `translate(0, ${yScale(d.name)})`)\n      .selectAll('rect.data-item')\n      .data((d) => d.values)\n      .enter()\n      .append('rect')\n      .attr('class', 'data-item')\n      .attr('x', (d) => xScale(d.start))\n      .attr('width', (d) => xScale(d.end) - xScale(d.start))\n      .attr('height', yScale.bandwidth())\n      .attr('fill', (d) => colorScale(d.name))\n      .attr('pointer-events', 'none');\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props, disability]);\n\n  return (\n    <div>\n      <h1>{props.name}</h1>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport {\n  DatasetRecommendationMultipleLinesAxis,\n  DatasetRecommendationMultipleLinesData,\n} from '@junoapp/common';\n\nimport { createColorScale, generateId } from '../utils/functions';\nimport { UserContext } from '../contexts/user.context';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function MultipleLineChart(props: {\n  name: string;\n  data: Array<DatasetRecommendationMultipleLinesData>;\n  axis: DatasetRecommendationMultipleLinesAxis;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n  const { disability } = useContext(UserContext);\n\n  useEffect(() => {\n    const margin = {\n      top: 10,\n      bottom: 30,\n      left: 80,\n      right: 80,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    const xAcessor = (d: DatasetRecommendationMultipleLinesData) => new Date(d.name);\n\n    const valueMaxLeft = d3.max(props.data, (d) =>\n      d3.max(\n        Object.keys(d.values)\n          .filter((k) => props.axis[k] === 'left')\n          .map((k) => d.values[k])\n      )\n    );\n\n    const valueMaxRight = d3.max(props.data, (d) =>\n      d3.max(\n        Object.keys(d.values)\n          .filter((k) => props.axis[k] === 'right')\n          .map((k) => d.values[k])\n      )\n    );\n\n    const hasRightAxis = Object.values(props.axis).some((a) => a === 'right');\n\n    const extent = d3.extent(props.data, xAcessor);\n    const keys = [\n      ...new Set([\n        ...Object.keys(props.data[0].values),\n        ...Object.keys(props.data[1].values),\n        ...Object.keys(props.data[props.data.length - 2].values),\n        ...Object.keys(props.data[props.data.length - 1].values),\n      ]),\n    ].filter((k) => props.axis[k]);\n\n    const colorScale = createColorScale(disability, keys);\n\n    const xScale = d3\n      .scaleTime()\n      .domain(extent)\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, valueMaxLeft])\n      .range([height - margin.bottom, margin.top]);\n\n    const y2Scale = d3\n      .scaleLinear()\n      .domain([0, valueMaxRight])\n      .range([height - margin.bottom, margin.top]);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n    const y2Axis = d3.axisRight(y2Scale);\n\n    for (const key of keys) {\n      const leftLineGenerator = d3\n        .line<DatasetRecommendationMultipleLinesData>()\n        .defined((d) => !isNaN(d.values[key]))\n        .x((d) => xScale(new Date(d.name)))\n        .y((d) => yScale(d.values[key]));\n\n      const rightLineGenerator = d3\n        .line<DatasetRecommendationMultipleLinesData>()\n        .defined((d) => !isNaN(d.values[key]))\n        .x((d) => xScale(new Date(d.name)))\n        .y((d) => y2Scale(d.values[key]));\n\n      groupData\n        .append('path')\n        .datum(props.data)\n        .attr('d', props.axis[key] === 'left' ? leftLineGenerator : rightLineGenerator)\n        .attr('width', width)\n        .attr('height', height)\n        .attr('fill', 'none')\n        .attr('stroke', colorScale(key))\n        .attr('stroke-width', 1.5)\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-linecap', 'round');\n    }\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    if (hasRightAxis) {\n      groupAxis\n        .append('g')\n        .call(y2Axis)\n        .attr('transform', `translate(${width - margin.right}, 0)`);\n    }\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props, disability]);\n\n  return (\n    <div>\n      <h1>{props.name}</h1>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues, generateId } from '@junoapp/common';\nimport { API_URL } from '../utils/constants';\n\nexport function MapChart(props: {\n  name: string;\n  geofile: string;\n  data: Array<DatasetChartSpecValues>;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n\n  useEffect(() => {\n    d3.json(`${API_URL}/${props.geofile}`).then((shape) => {\n      const height = 600;\n\n      const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n      const width = svg.node()?.getBoundingClientRect().width;\n\n      const projection = d3.geoMercator().fitExtent(\n        [\n          [20, 20],\n          [width, height],\n        ],\n        shape as any\n      );\n\n      const path = d3.geoPath().projection(projection);\n      const max = d3.max(props.data, (d) => d.value);\n\n      const accessor = (d) => {\n        const item = props.data.find((datum) => datum.name.trim() === d.properties.name);\n\n        if (item) {\n          return d3.interpolateBlues(item.value / max);\n        }\n\n        return 'white';\n      };\n\n      svg\n        .append('g')\n        .selectAll('path')\n        .data(shape['features'])\n        .enter()\n        .append('path')\n        .attr('d', path)\n        .style('fill', (d) => accessor(d))\n        .style('stroke', '#ccc')\n        .attr('alt', (d) => d['properties'].name);\n\n      return () => {\n        svg.remove();\n      };\n    });\n  }, [id, props.data, props.geofile]);\n\n  return (\n    <div>\n      <h1>{props.name}</h1>\n      <div id={id}></div>\n    </div>\n  );\n}\n\nexport default MapChart;\n","import { useEffect, useRef } from 'react';\nimport mapbox from 'mapbox-gl';\nimport { DatasetGeoChartSpecValues } from '@junoapp/common';\n\nmapbox.accessToken =\n  'pk.eyJ1IjoicGF1bG9tZW5lemVzIiwiYSI6ImNrMHZrc3Z2NjEwODMzbG52emduZWFkeTIifQ.fUByXk2mj50HO1xPDiTr5w';\n\nexport function MapBox(props: {\n  name: string;\n  data: Array<DatasetGeoChartSpecValues>;\n}): JSX.Element {\n  const mapContainer = useRef(null);\n  const map = useRef<mapbox.Map>(null);\n\n  useEffect(() => {\n    if (map.current) return;\n\n    let latMin = Number.MAX_VALUE;\n    let latMax = Number.MIN_VALUE;\n\n    let lngMin = Number.MAX_VALUE;\n    let lngMax = Number.MIN_VALUE;\n\n    const data = props.data.filter((d) => d.value > 0);\n\n    const features = data.map((d) => {\n      latMin = Math.min(latMin, +d.latitude);\n      latMax = Math.max(latMax, +d.latitude);\n\n      lngMin = Math.min(lngMin, +d.longitude);\n      lngMax = Math.max(lngMax, +d.longitude);\n\n      return {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [d.longitude, d.latitude],\n        },\n        properties: {\n          title: d.name,\n        },\n      };\n    });\n\n    map.current = new mapbox.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      zoom: 9,\n      bounds: [\n        [latMin, latMax],\n        [lngMin, lngMax],\n      ],\n    });\n\n    map.current.on('load', () => {\n      map.current.addSource('points', {\n        type: 'geojson',\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 50,\n        data: {\n          type: 'FeatureCollection',\n          features: features as any,\n        },\n      });\n\n      map.current.addLayer({\n        id: 'points',\n        type: 'circle',\n        source: 'points',\n        paint: {\n          'circle-color': '#919ad7',\n          'circle-opacity': 0.7,\n          'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40],\n        },\n      });\n\n      map.current.addLayer({\n        id: 'points-count',\n        type: 'symbol',\n        source: 'points',\n        filter: ['has', 'point_count'],\n        layout: {\n          'text-field': '{point_count_abbreviated}',\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': 12,\n        },\n      });\n    });\n  }, [props.data]);\n\n  return (\n    <div className=\"relative mb-4 mt-4\" style={{ height: 600 }}>\n      <h1>{props.name}</h1>\n      <div ref={mapContainer} className=\"map-container mapContainer\" />\n    </div>\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport * as d3 from 'd3';\nimport { DatasetChartSpecValues } from '@junoapp/common';\n\nimport { createColorScale, generateId } from '../utils/functions';\nimport { UserContext } from '../contexts/user.context';\n\nfunction elementId(svgId: string, id: string): string {\n  return `${svgId}-${id}`;\n}\n\nexport function GroupedHorizontalBarChart(props: {\n  name: string;\n  data: Array<DatasetChartSpecValues>;\n}): JSX.Element {\n  const [id] = useState<string>(generateId());\n  const { disability } = useContext(UserContext);\n\n  useEffect(() => {\n    const margin = {\n      top: 10,\n      bottom: 30,\n      left: 100,\n      right: 10,\n    };\n\n    const height = 400;\n\n    const svg = d3.select(`#${id}`).append('svg').attr('width', '100%').attr('height', height);\n    const width = svg.node()?.getBoundingClientRect().width;\n\n    const groupData = svg.append('g').attr('id', elementId(id, 'group-data'));\n    const groupAxis = svg.append('g').attr('id', elementId(id, 'group-axis'));\n\n    type GroupedData = {\n      name: string;\n      values: Array<{\n        name: string;\n        value: number;\n      }>;\n    };\n\n    let valueMax = Number.MIN_SAFE_INTEGER;\n\n    props.data.sort((a, b) => a.name2.localeCompare(b.name2));\n\n    const data: Array<GroupedData> = props.data.reduce(\n      (prev: GroupedData[], curr: DatasetChartSpecValues) => {\n        let item = prev.find((p) => p.name === curr.name);\n\n        if (!item) {\n          item = {\n            name: curr.name,\n            values: [],\n          };\n\n          prev.push(item);\n        }\n\n        item.values.push({\n          name: curr.name2,\n          value: curr.value,\n        });\n\n        if (curr.value >= valueMax) {\n          valueMax = curr.value;\n        }\n\n        return prev;\n      },\n      []\n    );\n\n    const keys = data.map((d) => d.name).reverse();\n    const groupedKeys = [...new Set(data.map((d) => d.values.map((v) => v.name)).flat())];\n\n    const colors = [...new Set(data.map((d) => d.values.map((v) => v.name)).flat())];\n\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, valueMax])\n      .range([margin.left, width - margin.right]);\n\n    const yScale = d3\n      .scaleBand()\n      .domain(keys)\n      .paddingInner(0.1)\n      .paddingOuter(0.1)\n      .range([height - margin.bottom, margin.top]);\n\n    const y2Scale = d3\n      .scaleBand()\n      .domain(groupedKeys)\n      .paddingInner(0.1)\n      .paddingOuter(0.1)\n      .range([0, yScale.bandwidth()]);\n\n    const colorScale = createColorScale(disability, colors);\n\n    const xAxis = d3.axisBottom(xScale);\n    const yAxis = d3.axisLeft(yScale);\n\n    const firstGroup = groupData\n      .selectAll('g.group-item')\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('class', 'group-item')\n      .attr('transform', (d) => `translate(0, ${yScale(d.name)})`)\n      .selectAll('rect.data-item')\n      .data((d) => d.values)\n      .enter()\n      .append('g')\n      .attr('class', 'data-item');\n\n    firstGroup\n      .append('rect')\n      .attr('x', (d) => xScale(0))\n      .attr('y', (d) => y2Scale(d.name))\n      .attr('width', (d) => xScale(d.value))\n      .attr('height', y2Scale.bandwidth())\n      .attr('fill', (d) => colorScale(d.name))\n      .attr('pointer-events', 'none');\n\n    firstGroup\n      .append('text')\n      .attr('x', (d) => xScale(0) + 5)\n      .attr('y', (d) => y2Scale(d.name) + y2Scale.bandwidth() - 5)\n      .attr('font-size', '12px')\n      .text((d) => d.name);\n\n    groupAxis\n      .append('g')\n      .call(xAxis)\n      .attr('transform', `translate(0, ${height - margin.bottom})`);\n\n    groupAxis.append('g').call(yAxis).attr('transform', `translate(${margin.left}, 0)`);\n\n    return () => {\n      svg.remove();\n    };\n  }, [id, props, disability]);\n\n  return (\n    <div>\n      <h1>{props.name}</h1>\n      <div id={id}></div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { VerticalBarChart } from '../charts/VerticalBarChart';\nimport {\n  DatasetRecommendation,\n  DatasetChartSpec,\n  DashboardInterface,\n  DatasetRecommendationMultipleLinesData,\n  DatasetChartSpecValues,\n  DashboardRecommendation,\n  DatasetGeoChartSpecValues,\n  DatasetSchemaAggregateFunction,\n} from '@junoapp/common';\nimport { getById } from '../services/dashboard.service';\nimport { getSpec } from '../services/dashboard-recommendation.service';\n\nimport { LineChart } from '../charts/LineChart';\nimport { Heatmap } from '../charts/Heatmap';\nimport { HorizontalBarChart } from '../charts/HorizontalBarChart';\nimport { StackedHorizontalBarChart } from '../charts/StackedHorizontalBarChart';\nimport { FieldDefBase } from 'vega-lite/build/src/channeldef';\nimport { Field } from 'vega';\nimport { InlineData } from 'vega-lite/build/src/data';\nimport { VegaLite } from 'react-vega';\nimport { MultipleLineChart } from '../charts/MultipleLineChart';\nimport { applyClass } from '../utils/functions';\nimport { Card } from '../components/ui/Card';\nimport MapChart from '../charts/MapChart';\nimport { MapBox } from '../charts/Mapbox';\nimport { GroupedHorizontalBarChart } from '../charts/GroupedHorizontalBarChart';\n\nfunction convert(value: string) {\n  return isNaN(+value) ? undefined : +value;\n}\n\nconst formatter = new Intl.NumberFormat('pt-BR', {\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n}).format;\n\nexport function Dashboard(): JSX.Element {\n  const [dashboard, setDashboard] = useState<DashboardRecommendation | undefined>(undefined);\n  const [chartData, setChartData] = useState<DatasetChartSpec[]>([]);\n  const [page, setPage] = useState<string>();\n  const [d, setD] = useState<DatasetRecommendation[]>([]);\n\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    getById(+id).then((dashboard: DashboardInterface) => {\n      getSpec(dashboard.id).then((data: DashboardRecommendation) => {\n        // setD(data);\n        setDashboard(data);\n\n        let cData: DatasetChartSpec[] = [];\n\n        setPage(data.pages[0].name);\n\n        const clampStrings = dashboard.userDatasets[0].owner.preferences\n          ? dashboard.userDatasets[0].owner.preferences.clampStrings\n          : 30;\n\n        for (const page of data.pages) {\n          for (const datum of page.charts) {\n            if (datum.multipleLines) {\n              const fieldX = [\n                ...new Set(\n                  datum.multipleLines.specs.map((spec) => (spec as any).userDimension.name)\n                ),\n              ];\n              const fieldY = [\n                ...new Set(datum.multipleLines.specs.map((spec) => (spec as any).userMeasure.name)),\n              ];\n\n              cData.push({\n                page: page.name,\n                type: 'multiple-line',\n                name:\n                  fieldX.length > 1\n                    ? `${fieldY[0]} by ${fieldX.join(', ')}`\n                    : `${fieldY.join(', ')} by ${fieldX[0]}`,\n                values: datum.multipleLines.data,\n                axis: datum.multipleLines.axis,\n              });\n            } else if (Object.keys(datum.encoding).length === 3) {\n              const fieldColor = (datum.encoding.color as FieldDefBase<Field>).field.toString();\n\n              if (datum.userMeasure.aggregate === DatasetSchemaAggregateFunction.Mean) {\n                cData.push({\n                  page: page.name,\n                  type:\n                    datum.key === (datum.encoding.x as FieldDefBase<Field>).field\n                      ? 'grouped-vertical-bar'\n                      : 'grouped-horizontal-bar',\n                  name: `${datum.userMeasure.name} by ${\n                    datum.trimValues ? `Top ${clampStrings}` : ''\n                  } ${datum.userDimension.name} and ${datum.userSecondDimension.name}`,\n                  values: ((datum.data as InlineData).values as Array<any>).map((v) => ({\n                    name: v[datum.key],\n                    name2: v[fieldColor],\n                    value: convert(v[datum.value]), // isNaN(+v[datum.value]) ? undefined : +v[datum.value],\n                  })),\n                });\n              } else {\n                cData.push({\n                  page: page.name,\n                  type:\n                    datum.key === (datum.encoding.x as FieldDefBase<Field>).field\n                      ? 'stacked-vertical-bar'\n                      : 'stacked-horizontal-bar',\n                  name: `${datum.userMeasure.name} by ${\n                    datum.trimValues ? `Top ${clampStrings}` : ''\n                  } ${datum.userDimension.name} and ${datum.userSecondDimension.name}`,\n                  values: ((datum.data as InlineData).values as Array<any>).map((v) => ({\n                    name: v[datum.key],\n                    name2: v[fieldColor],\n                    value: convert(v[datum.value]), // isNaN(+v[datum.value]) ? undefined : +v[datum.value],\n                  })),\n                });\n              }\n            } else if (datum.mark === 'text') {\n              cData.push({\n                page: page.name,\n                type: datum.mark,\n                name: datum.value,\n                values: [\n                  {\n                    name: datum.value,\n                    value: +(datum.data as InlineData).values[0],\n                  },\n                ],\n              });\n            } else if (datum.mark === 'geo-lat-lng') {\n              cData.push({\n                page: page.name,\n                type: datum.mark,\n                name: `${datum.value} ${datum.userDimension.name} map`,\n                values: ((datum.data as InlineData).values as Array<any>).map((v) => ({\n                  name: v[datum.key],\n                  value: convert(v[datum.value]),\n                  latitude: v['latitude'],\n                  longitude: v['longitude'],\n                })),\n              });\n            } else {\n              cData.push({\n                page: page.name,\n                type:\n                  datum.mark === 'bar'\n                    ? datum.key === (datum.encoding.x as FieldDefBase<Field>).field\n                      ? 'vertical-bar'\n                      : 'horizontal-bar'\n                    : datum.mark,\n                name: `${datum.userMeasure.name} of ${\n                  datum.trimValues ? `Top ${clampStrings}` : ''\n                } ${datum?.userDimension?.name ?? datum.key} ${\n                  datum.mark === 'heatmap' ? 'heatmap' : ''\n                }`,\n                values: ((datum.data as InlineData).values as Array<any>).map((v) => ({\n                  name: v[datum.key],\n                  value: convert(v[datum.value]), // isNaN(+v[datum.value]) ? undefined : +v[datum.value],\n                })),\n                geofile: datum.geoFile,\n              });\n            }\n          }\n        }\n\n        setChartData(cData);\n      });\n    });\n\n    return () => {\n      setChartData([]);\n      setD([]);\n    };\n  }, [id]);\n\n  return (\n    <div>\n      <div className=\"flex flex-wrap mb-2\">\n        {dashboard &&\n          dashboard.pages.length > 1 &&\n          dashboard.pages.map((dashboardPage) => (\n            <button\n              key={dashboardPage.name}\n              type=\"button\"\n              className={`button button-primary mr-2 mb-2 ${applyClass(\n                dashboardPage.name === page,\n                'active'\n              )}`}\n              onClick={() => setPage(dashboardPage.name)}\n            >\n              {dashboardPage.name}\n            </button>\n          ))}\n      </div>\n\n      <div className=\"flex -mx-4 mb-4\">\n        {chartData &&\n          chartData\n            .filter((chart) => chart.type === 'text')\n            .map((chart) => (\n              <Card title={chart.name} key={chart.name} className=\"mx-4\">\n                <div key={chart.name} className=\"card\">\n                  <h3>{formatter((chart.values[0] as DatasetChartSpecValues).value)}</h3>\n                </div>\n              </Card>\n            ))}\n      </div>\n\n      {chartData &&\n        chartData\n          .filter((chart) => chart.page === page)\n          .map((chart, index) => (\n            <div key={`${chart.name}-${index}`}>\n              {chart.type === 'geoshape' && (\n                <MapChart\n                  name={chart.name}\n                  geofile={chart.geofile}\n                  data={chart.values as DatasetChartSpecValues[]}\n                />\n              )}\n\n              {chart.type === 'geo-lat-lng' && (\n                <MapBox name={chart.name} data={chart.values as DatasetGeoChartSpecValues[]} />\n              )}\n\n              {chart.type === 'multiple-line' && (\n                <MultipleLineChart\n                  name={chart.name}\n                  data={chart.values as DatasetRecommendationMultipleLinesData[]}\n                  axis={chart.axis!}\n                />\n              )}\n\n              {chart.type === 'line' && (\n                <LineChart name={chart.name} data={chart.values as DatasetChartSpecValues[]} />\n              )}\n\n              {chart.type === 'heatmap' && (\n                <Heatmap name={chart.name} data={chart.values as DatasetChartSpecValues[]} />\n              )}\n\n              {chart.type === 'vertical-bar' && (\n                <VerticalBarChart\n                  name={chart.name}\n                  data={chart.values as DatasetChartSpecValues[]}\n                />\n              )}\n\n              {chart.type === 'horizontal-bar' && (\n                <HorizontalBarChart\n                  name={chart.name}\n                  data={chart.values as DatasetChartSpecValues[]}\n                />\n              )}\n\n              {chart.type === 'stacked-horizontal-bar' && (\n                <StackedHorizontalBarChart\n                  name={chart.name}\n                  data={chart.values as DatasetChartSpecValues[]}\n                />\n              )}\n\n              {chart.type === 'grouped-horizontal-bar' && (\n                <GroupedHorizontalBarChart\n                  name={chart.name}\n                  data={chart.values as DatasetChartSpecValues[]}\n                />\n              )}\n            </div>\n          ))}\n\n      {d &&\n        d\n          .filter((dd) => dd.mark !== 'line')\n          .map((dd) => (\n            <span>\n              <VegaLite spec={dd as any} data={dd.data as any} />\n            </span>\n          ))}\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { applyClass } from '../utils/functions';\n\nexport function useButtonGroup(\n  options: Array<{ type: string; label: string }>,\n  defaultValue: string | undefined\n): [string | undefined, () => JSX.Element, React.Dispatch<React.SetStateAction<string>>] {\n  const [state, setState] = useState<string | undefined>(defaultValue);\n\n  const ButtonGroup = () => (\n    <div className=\"flex items-start\">\n      {options &&\n        options.map((option) => (\n          <button\n            key={option.type}\n            type=\"button\"\n            className={`button button-primary rounded-none first:rounded-l-md last:rounded-r-md ${applyClass(\n              state === option.type,\n              'active'\n            )}`}\n            onClick={() => setState(option.type)}\n          >\n            {option.label}\n          </button>\n        ))}\n    </div>\n  );\n\n  return [state, ButtonGroup, setState];\n}\n","import { UserVisLiteracy } from '@junoapp/common';\nimport { useFormik } from 'formik';\nimport { useHistory } from 'react-router-dom';\n\nimport { Input } from '../components/form/Input';\nimport { Card } from '../components/ui/Card';\nimport { useButtonGroup } from '../hooks/useButtonGroup';\nimport { save } from '../services/user.service';\n\nexport function UserAdd(): JSX.Element {\n  const history = useHistory();\n  const [visLiteracy, VisLiteracy] = useButtonGroup(\n    [\n      { type: 'LOW', label: 'Low' },\n      { type: 'MEDIUM', label: 'Medium' },\n      { type: 'HIGH', label: 'High' },\n    ],\n    'LOW'\n  );\n\n  const [colorBlind, ColorBlind] = useButtonGroup(\n    [\n      { type: 'false', label: 'No' },\n      { type: 'true', label: 'Yes' },\n    ],\n    'false'\n  );\n\n  const [dyslexic, Dyslexic] = useButtonGroup(\n    [\n      { type: 'false', label: 'No' },\n      { type: 'true', label: 'Yes' },\n    ],\n    'false'\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      disability: '',\n      visLiteracy: '',\n    },\n    onSubmit: (values) => {\n      save({\n        name: values.name,\n        disability: [\n          colorBlind === 'true' ? 'colorBlind' : false,\n          dyslexic === 'true' ? 'dyslexic' : false,\n        ]\n          .filter(Boolean)\n          .join(', '),\n        visLiteracy: visLiteracy as UserVisLiteracy,\n      }).then((user) => {\n        history.replace('/');\n      });\n    },\n  });\n\n  return (\n    <div className=\"relative\">\n      <Card className=\"min-h\" title=\"Add new user\">\n        <form className=\"w-full max-w-lg\" onSubmit={formik.handleSubmit}>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n            <div className=\"w-full px-3\">\n              <Input name=\"name\" label=\"Name\" placeholder=\"name\" formik={formik} />\n            </div>\n          </div>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n            <div className=\"w-full px-3\">\n              <label className=\"label\">Disability - Color blind</label>\n\n              <ColorBlind />\n            </div>\n          </div>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n            <div className=\"w-full px-3\">\n              <label className=\"label\">Disability - Dyslexic</label>\n\n              <Dyslexic />\n            </div>\n          </div>\n          <div className=\"flex flex-wrap -mx-3 mb-6\">\n            <div className=\"w-full px-3\">\n              <label className=\"label\">Vis Literacy</label>\n\n              <VisLiteracy />\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"button\">\n            Save\n          </button>\n        </form>\n      </Card>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { formatRelative } from 'date-fns';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { getAll } from '../services/dashboard.service';\nimport { DatasetColumnRole, DashboardInterface } from '@junoapp/common';\nimport { Alert } from './ui/Alert';\nimport { Loading } from './ui/Loading';\nimport { Card } from './ui/Card';\nimport { Badge } from './ui/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function DashboardList(): JSX.Element {\n  const [datasets, setDatasets] = useState<DashboardInterface[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    const load = () => {\n      setIsLoading(true);\n\n      getAll(+id).then((datasets) => {\n        setDatasets(datasets);\n        setIsLoading(false);\n      });\n    };\n\n    load();\n  }, [id]);\n\n  const countColumns = (dataset: DashboardInterface, type: DatasetColumnRole): React.ReactNode => {\n    const count = dataset.userDatasets[0].columns.filter(\n      (column) => column.role === type && !column.removed\n    ).length;\n\n    if (count > 0) {\n      return (\n        <Badge>\n          {count} {type.toLowerCase()} column{count > 1 ? 's' : ''}\n        </Badge>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div className=\"relative flex flex-wrap -mx-4 min-h\">\n      <Loading loading={isLoading} />\n\n      {!isLoading && datasets.length === 0 && (\n        <Alert\n          title=\"No dataset loaded\"\n          message=\"Upload a CSV file or connect with a database.\"\n          className=\"mx-4\"\n        />\n      )}\n\n      {!isLoading &&\n        datasets.length > 0 &&\n        datasets.map((dashboard: DashboardInterface) => (\n          <div key={dashboard.id} className=\"w-1/3 px-4 mb-4\">\n            <Card title={dashboard.name}>\n              <div className=\"flex flex-col items-start\">\n                <Badge>CSV</Badge>\n                {countColumns(dashboard, DatasetColumnRole.MEASURE)}\n                {countColumns(dashboard, DatasetColumnRole.DIMENSION)}\n                <span className=\"text-gray-600 text-xs mb-2\">\n                  Updated {formatRelative(new Date(dashboard.updatedDate), new Date())}\n                  <br />\n                  Created {formatRelative(new Date(dashboard.createdDate), new Date())}\n                </span>\n              </div>\n              <div className=\"flex\">\n                <Link\n                  to={`/dashboard/view/${dashboard.id}`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"eye\" />\n                  View\n                </Link>\n                <Link\n                  to={`/dashboard/${dashboard.id}/edit`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"pencil-alt\" />\n                  Edit\n                </Link>\n              </div>\n            </Card>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { formatRelative } from 'date-fns';\nimport { Link } from 'react-router-dom';\n\nimport { getAll } from '../services/dataset.service';\nimport { DatasetInterface, DatasetColumnRole } from '@junoapp/common';\nimport { Alert } from './ui/Alert';\nimport { Loading } from './ui/Loading';\nimport { Card } from './ui/Card';\nimport { Badge } from './ui/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function DatasetsList(): JSX.Element {\n  const [datasets, setDatasets] = useState<DatasetInterface[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const load = () => {\n    setIsLoading(true);\n\n    getAll().then((datasets) => {\n      setDatasets(datasets);\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  const countColumns = (dataset: DatasetInterface, type: DatasetColumnRole): React.ReactNode => {\n    const count = dataset.columns.filter((column) => column.role === type).length;\n\n    if (count > 0) {\n      return (\n        <Badge>\n          {count} {type.toLowerCase()} column{count > 1 ? 's' : ''}\n        </Badge>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div className=\"relative flex flex-wrap -mx-4 min-h\">\n      <Loading loading={isLoading} />\n\n      {!isLoading && datasets.length === 0 && (\n        <Alert\n          title=\"No dataset loaded\"\n          message=\"Upload a CSV file or connect with a database.\"\n          className=\"mx-4\"\n        />\n      )}\n\n      {!isLoading &&\n        datasets.length > 0 &&\n        datasets.map((dataset: DatasetInterface) => (\n          <div key={dataset.id} className=\"w-1/3 px-4 mb-4\">\n            <Card title={dataset.originalname}>\n              <div className=\"flex flex-col items-start\">\n                <Badge>CSV</Badge>\n                {countColumns(dataset, DatasetColumnRole.MEASURE)}\n                {countColumns(dataset, DatasetColumnRole.DIMENSION)}\n                <span className=\"text-gray-600 text-xs mb-2\">\n                  Updated {formatRelative(new Date(dataset.updatedDate), new Date())}\n                  <br />\n                  Created {formatRelative(new Date(dataset.createdDate), new Date())}\n                </span>\n              </div>\n              <div className=\"flex\">\n                <Link\n                  to={`/dashboard/add/${dataset.id}`}\n                  className=\"button button-primary button-small mr-2\"\n                >\n                  <FontAwesomeIcon icon=\"pencil-alt\" className=\"mr-1\" />\n                  Create new dashboard\n                </Link>\n              </div>\n            </Card>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { useEffect, useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { DashboardList } from '../components/DashboardList';\n\nimport { DatasetsList } from '../components/DatasetsList';\nimport { UserContext } from '../contexts/user.context';\nimport { getById } from '../services/user.service';\n\nexport function UserView(): JSX.Element {\n  const { id } = useParams<{ id: string }>();\n  const user = useContext(UserContext);\n\n  useEffect(() => {\n    getById(+id).then((userData) => {\n      user.signIn(id, userData.disability);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  return (\n    <div>\n      <div className=\"flex\">\n        <Link to={`/dataset/add`} className=\"button button-primary\">\n          Add new dataset\n        </Link>\n      </div>\n\n      <div className=\"text-lg mt-3\">My dashboards</div>\n\n      <hr />\n\n      <div className=\"mt-5\">\n        <DashboardList />\n      </div>\n\n      <div className=\"text-lg\">Public datasets</div>\n\n      <hr />\n\n      <div className=\"mt-5\">\n        <DatasetsList />\n      </div>\n    </div>\n  );\n}\n","import { useState, ChangeEvent, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { uploadDataset } from '../services/dataset.service';\nimport { Loading } from './ui/Loading';\nimport { Card } from './ui/Card';\nimport { UserContext } from '../contexts/user.context';\n\nexport function UploadFileForm(): JSX.Element {\n  const { user } = useContext(UserContext);\n  const [isLoading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const onChangeHandler = async (event: ChangeEvent<HTMLInputElement>) => {\n    event.persist();\n\n    if (event.target.files) {\n      try {\n        setLoading(true);\n\n        const response = await uploadDataset(user, event.target.files[0]);\n\n        history.push(`/dashboard/add/${response.id}`);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"relative\">\n      <Card className=\"min-h\">\n        <Loading loading={isLoading} />\n\n        {!isLoading && (\n          <div>\n            <label className=\"label\">Upload a file:</label>\n            <div className=\"mt-2\">\n              <label htmlFor=\"file\" className=\"button\">\n                Select a file\n              </label>\n              <input\n                type=\"file\"\n                className=\"hide\"\n                name=\"file\"\n                id=\"file\"\n                onChange={onChangeHandler}\n              />\n            </div>\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n}\n","import { Link, useHistory, withRouter } from 'react-router-dom';\n\nimport { useContext } from 'react';\nimport { UserContext } from '../contexts/user.context';\n\nfunction Header(): JSX.Element {\n  const history = useHistory();\n  const { user, signOut } = useContext(UserContext);\n\n  return (\n    <header className=\"bg-yellow-500 p-3 text-white text-lg font-bold flex justify-between\">\n      <Link to=\"/\">Juno</Link>\n\n      {user && (\n        <div>\n          <button type=\"button\" onClick={() => history.replace('/preferences')} className=\"mr-4\">\n            Preferences\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              signOut();\n              history.replace('/');\n            }}\n          >\n            Sair\n          </button>\n        </div>\n      )}\n    </header>\n  );\n}\n\nexport default withRouter(Header);\n","import { FieldInputProps } from 'formik';\n\nexport function Checkbox({\n  name,\n  label,\n  disabled,\n  formik,\n  checked,\n}: {\n  name: string;\n  label: string;\n  checked: boolean;\n  placeholder?: string;\n  disabled?: boolean;\n  formik: { getFieldProps: (name: string) => FieldInputProps<any> };\n}): JSX.Element {\n  return (\n    <div>\n      <label className=\"label\" htmlFor={name}>\n        {label}\n      </label>\n      <input\n        id={name}\n        type=\"checkbox\"\n        checked={checked}\n        className=\"rounded bg-gray-200 border-transparent focus:border-transparent focus:bg-gray-200 text-gray-700 focus:ring-1 focus:ring-offset-2 focus:ring-gray-500\"\n        disabled={disabled}\n        {...formik.getFieldProps(name)}\n      />\n    </div>\n  );\n}\n","import { UserVisLiteracy } from '@junoapp/common';\nimport { useFormik } from 'formik';\nimport { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Checkbox } from '../components/form/Checkbox';\nimport { Input } from '../components/form/Input';\nimport { Select } from '../components/form/Select';\nimport { Card } from '../components/ui/Card';\nimport { UserContext } from '../contexts/user.context';\nimport { useButtonGroup } from '../hooks/useButtonGroup';\nimport { getById, savePreferences } from '../services/user.service';\n\nconst types = ['NUMBER', 'STRING', 'DATE'];\nconst chartTypes = [];\n\nfor (const typeX of types) {\n  for (const typeY of types) {\n    if (typeX !== typeY) {\n      chartTypes.push({\n        typeX,\n        typeY,\n        chart: 'AUTO',\n      });\n    }\n  }\n}\n\nexport function Preferences(): JSX.Element {\n  const { user } = useContext(UserContext);\n  const history = useHistory();\n\n  const [visLiteracy, VisLiteracy, setVisLiteracy] = useButtonGroup(\n    [\n      { type: 'LOW', label: 'Low' },\n      { type: 'MEDIUM', label: 'Medium' },\n      { type: 'HIGH', label: 'High' },\n    ],\n    'LOW'\n  );\n\n  const [colorBlind, ColorBlind, setColorBlind] = useButtonGroup(\n    [\n      { type: 'false', label: 'No' },\n      { type: 'true', label: 'Yes' },\n    ],\n    'false'\n  );\n\n  const [dyslexic, Dyslexic, setDyslexic] = useButtonGroup(\n    [\n      { type: 'false', label: 'No' },\n      { type: 'true', label: 'Yes' },\n    ],\n    'false'\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      stacked: true,\n      multiline: true,\n      rightAxis: true,\n      binValues: 50,\n      clampStrings: 30,\n      chartTypes,\n    },\n    onSubmit: (values) => {\n      savePreferences(+user, {\n        ...values,\n        disability: [\n          colorBlind === 'true' ? 'colorBlind' : false,\n          dyslexic === 'true' ? 'dyslexic' : false,\n        ]\n          .filter(Boolean)\n          .join(', '),\n        visLiteracy: visLiteracy as UserVisLiteracy,\n      }).then(() => {\n        backToHome();\n      });\n    },\n  });\n\n  useEffect(() => {\n    getById(+user).then((userData) => {\n      setVisLiteracy(userData.visLiteracy);\n      setColorBlind(userData.disability.includes('colorBlind') ? 'true' : 'false');\n      setDyslexic(userData.disability.includes('dyslexic') ? 'true' : 'false');\n\n      if (userData['preferences']) {\n        formik.setFieldValue('stacked', userData['preferences'].stacked);\n        formik.setFieldValue('multiline', userData['preferences'].multiline);\n        formik.setFieldValue('rightAxis', userData['preferences'].rightAxis);\n        formik.setFieldValue('binValues', userData['preferences'].binValues);\n        formik.setFieldValue('clampStrings', userData['preferences'].clampStrings);\n\n        for (const typeX of types) {\n          for (const typeY of types) {\n            if (typeX !== typeY) {\n              const index = userData['preferences'].chartTypes.findIndex(\n                (chartType) => chartType.typeX === typeX && chartType.typeY === typeY\n              );\n\n              formik.setFieldValue(\n                `chartTypes.${index}.chart`,\n                userData['preferences'].chartTypes[index].chart\n              );\n            }\n          }\n        }\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  const backToHome = () => {\n    history.replace(`/`);\n  };\n\n  return (\n    <Card title=\"Preferences\">\n      <form className=\"w-full\" onSubmit={formik.handleSubmit}>\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full px-3\">\n            <label className=\"label\">Disability - Color blind</label>\n\n            <ColorBlind />\n          </div>\n        </div>\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full px-3\">\n            <label className=\"label\">Disability - Dyslexic</label>\n\n            <Dyslexic />\n          </div>\n        </div>\n        <div className=\"flex flex-wrap -mx-3 mb-6\">\n          <div className=\"w-full px-3\">\n            <label className=\"label\">Vis Literacy</label>\n\n            <VisLiteracy />\n          </div>\n        </div>\n\n        <div className=\"font-bold\">Based on chart types:</div>\n        <hr className=\"my-2\" />\n        <Checkbox\n          checked={formik.values.stacked}\n          name=\"stacked\"\n          label=\"Stacked bars when possible\"\n          formik={formik}\n        />\n\n        <hr className=\"my-2\" />\n        <Checkbox\n          checked={formik.values.multiline}\n          name=\"multiline\"\n          label=\"Multiline charts\"\n          formik={formik}\n        />\n\n        <hr className=\"my-2\" />\n        <Checkbox\n          checked={formik.values.rightAxis}\n          name=\"rightAxis\"\n          label=\"Line charts with right axis\"\n          formik={formik}\n        />\n\n        <hr className=\"my-2\" />\n        <Input name=\"binValues\" label=\"Bin quantitative columns higher than\" formik={formik} />\n\n        <hr className=\"my-2\" />\n        <Input\n          name=\"clampStrings\"\n          label=\"Clamp string columns with more distinct values than\"\n          formik={formik}\n        />\n\n        <div className=\"font-bold\">Based on chart types:</div>\n        <hr className=\"my-2\" />\n        {chartTypes.map((_, index) => (\n          <div className=\"flex -mx-4 mb-3\" key={index}>\n            <div className=\"px-4 w-1/3\">\n              <Input\n                name={`chartTypes.${index}.typeX`}\n                label=\"Type X\"\n                disabled={true}\n                formik={formik}\n              />\n            </div>\n            <div className=\"px-4 w-1/3\">\n              <Input\n                name={`chartTypes.${index}.typeY`}\n                label=\"Type Y\"\n                disabled={true}\n                formik={formik}\n              />\n            </div>\n            <div className=\"px-4 w-1/3\">\n              <Select\n                name={`chartTypes.${index}.chart`}\n                label=\"Chart Type\"\n                options={[\n                  { value: 'AUTO', label: 'Auto' },\n                  { value: 'LINE', label: 'Line' },\n                  { value: 'BAR', label: 'Bar' },\n                ]}\n                formik={formik}\n              />\n            </div>\n          </div>\n        ))}\n\n        <div className=\"flex justify-end\">\n          <button type=\"button\" className=\"button mr-2\" onClick={backToHome}>\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"button button-primary\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nimport { Home } from './pages/Home';\nimport { DatasetColumns } from './pages/DatasetColumns';\nimport { Dashboard } from './pages/Dashboard';\nimport { UserAdd } from './pages/UserAdd';\nimport { UserView } from './pages/UserView';\nimport { UploadFileForm } from './components/UploadFileForm';\nimport Header from './components/Header';\nimport { Preferences } from './pages/Preferences';\nimport { UserContext } from './contexts/user.context';\nimport { useContext } from 'react';\n\nlibrary.add(fas);\n\nfunction App(): JSX.Element {\n  const { disability } = useContext(UserContext);\n\n  return (\n    <div className={`App ${disability?.includes('dyslexic') ? 'dyslexic-font' : ''}`}>\n      <BrowserRouter>\n        <Switch>\n          <div>\n            <Header />\n\n            <div className=\"container mx-auto pt-4 mb-8\">\n              <Route exact path=\"/user/add\">\n                <UserAdd />\n              </Route>\n              <Route exact path=\"/dataset/add\">\n                <UploadFileForm />\n              </Route>\n              <Route exact path=\"/dashboard/add/:id\">\n                <DatasetColumns action=\"add\" />\n              </Route>\n              <Route exact path=\"/dashboard/:id/edit\">\n                <DatasetColumns action=\"edit\" />\n              </Route>\n              <Route exact path=\"/dashboard/view/:id\">\n                <Dashboard />\n              </Route>\n              <Route exact path=\"/user/view/:id\">\n                <UserView />\n              </Route>\n              <Route exact path=\"/preferences\">\n                <Preferences />\n              </Route>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n            </div>\n          </div>\n        </Switch>\n      </BrowserRouter>\n\n      {/* <div className=\"border h-12 border-red-600\">Toolbar</div>\n\n      <div className=\"flex flex-1\">\n        <div className=\"border w-1/6 h-10\"></div>\n        <div className=\"border flex-1 h-10\"></div>\n        <div className=\"border w-1/6 h-10\"></div>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './tailwind.css';\n\nimport App from './App';\nimport { UserProvider } from './contexts/user.context';\n\nReactDOM.render(\n  <StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}